{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 This site documents contains the DANS BagIt Profile specifications. This is a document that specifies the requirements for a valid DANS bag. There are several versions of the document: v1.3.0 - CURRENT VERSION - the rules for the DANS Data Stations. v0.0.0 - the rules as used by the Legacy DANS EASY Archive system. Archived versions: v1.0.0 v1.0.0-migration-supplement v1.1.0 v1.2.0 The version numbers follow the semantic versioning scheme: Given a version number MAJOR.MINOR.PATCH , increment the: MAJOR version when you make incompatible API changes, MINOR version when you add functionality in a backwards compatible manner, and PATCH version when you make backwards compatible bug fixes.","title":"Welcome"},{"location":"#welcome","text":"This site documents contains the DANS BagIt Profile specifications. This is a document that specifies the requirements for a valid DANS bag. There are several versions of the document: v1.3.0 - CURRENT VERSION - the rules for the DANS Data Stations. v0.0.0 - the rules as used by the Legacy DANS EASY Archive system. Archived versions: v1.0.0 v1.0.0-migration-supplement v1.1.0 v1.2.0 The version numbers follow the semantic versioning scheme: Given a version number MAJOR.MINOR.PATCH , increment the: MAJOR version when you make incompatible API changes, MINOR version when you add functionality in a backwards compatible manner, and PATCH version when you make backwards compatible bug fixes.","title":"Welcome"},{"location":"context/","text":"Context \u00b6 This module is a component in the DANS Data Station Architecture .","title":"About"},{"location":"context/#context","text":"This module is a component in the DANS Data Station Architecture .","title":"Context"},{"location":"versions/0.0.0/","text":"DANS BagIt Profile v0.0.0 \u00b6 Introduction \u00b6 Version \u00b6 Document version: 0.0.0 Publication date: 2019-05-02 Status \u00b6 Status of this document is PUBLISHED. THIS VERSION OF THE PROFILE IS DEPRECATED AND ONLY APPLIES TO THE LEGACY EASY SWORD2 SERVICE. Scope \u00b6 This document specifies what constitutes an acceptable DANS bag. This includes all the requirements for a bag to be successfully processed by the ingest workflow. What is acceptable as a SIP is sometimes not exactly the same as what is acceptable as an AIP . Where these are different, this is documented. Version 0.0.0 covers the de facto requirements that are used by the DANS EASY archive. In this context a SIP is the bag as it is submitted by the client and an AIP is the bag as it is stored in the DANS EASY Vault, which is implemented as a bag-store . Overview and conventions \u00b6 Key words \u00b6 The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \" OPTIONAL\" in this document are to be interpreted as described in RFC 2119 . The key word \"SHOULD\" is also used to specify requirements that are impossible or impractical to check by the archival organization (i.e. DANS). The client should do its best to meet these requirements, but not rely on their being validated by the archival organization. Subdivisions \u00b6 The requirements are subdivided into the following sections: BagIt-related requirements - requirements that refer back to the BagIt specifications Structural requirements - requirements regarding the directories and files in the bag Metadata requirements - requirements regarding the metadata files included in the bag Bag sequence requirements - requirements regarding the metadata that records how a sequence of bags can represent the history of a dataset The sections are numbered and may have numbered subsections. The requirements themselves are stated as numbered rules. To uniquely identify a specific rule, use the notation <section-nr>[.<subsection-nr>].<rule-nr> , e.g., 2.3.4 for the fourth rule in subsection 3 of section 2. SIP vs AIP \u00b6 Rules that only apply to SIPs or AIPs are annotated with the comments \" (SIP) \" and \" (AIP) \" respectively. All other rules apply to SIP and AIP alike. Stand-alone vs in-sequence-context validation \u00b6 There are two levels of validation: stand-alone : this includes the validation steps that can be performed without taking into account any data outside the bag, in particular the bag store that the bag is (to be) stored in. This means that only the rules in sections 1-3 are checked in this level. in-sequence-context : this includes all the checks done in stand-alone validation plus checks that involve the bag-sequence that the bag is (to be) part of. This means all the rules in this document are checked. Stand-alone validation can be useful when you do not have access to the target bag store. Another reason to do only stand-alone validation may be that the overhead of doing calls to the bag store over the network is too high. XML namespaces \u00b6 When referring to XML element or attribute names or attribute values that have a prefix (such as dcterms:identifier ) an element in a certain namespace is intended. The table below lists the mapping from prefix to namespace. In the actual document, the namespace may be bound to a different prefix, or be the default namespace. Prefix Namespace URI Namespace documentation am http://easy.dans.knaw.nl/schemas/bag/metadata/agreements/ DANS deposit agreement metadata amd http://easy.dans.knaw.nl/easy/dataset-administrative-metadata/ EASY administrative metadata schema dc http://purl.org/dc/elements/1.1/ DC dcterms http://purl.org/dc/terms/ DCTERMS dcx-dai http://easy.dans.knaw.nl/schemas/dcx/dai/ DANS DCTERMS extension: Digital Author Identifier dcx-gml http://easy.dans.knaw.nl/schemas/dcx/gml/ DANS DCTERMS extension: Geography Markup Language ddm http://easy.dans.knaw.nl/schemas/md/ddm/ DANS dataset metadata schema emd http://easy.dans.knaw.nl/easy/easymetadata/ EASY metadata schema files http://easy.dans.knaw.nl/schemas/bag/metadata/files/ DANS bag file metadata schema gml http://www.opengis.net/gml GML 3.1.1 Simplified Features profile Levels 0 and 1 id-type http://easy.dans.knaw.nl/schemas/vocab/identifier-type/ DANS controlled list of dcterms:identifier types wfs http://easy.dans.knaw.nl/easy/workflow/ EASY administrative workflow metadata schema xsi http://www.w3.org/2001/XMLSchema-instance XML Schema Name spelling \u00b6 Exact names are specified in code style. The capitalization of those names must be exactly as specified, unless it is explicitly stated that the name is case insensitive. If the name is a file path it is relative to the bag base directory. Glossary \u00b6 This section defines a number of terms that may be useful when discussing this specification. Several of these terms are used in the Requirements section of this document. Where terms are used in the definitions of other terms, they are printed in italics . AIP : Archival Information Package, as defined in the OAIS Reference Model . See also AIP . bag : a data package conforming to the BagIt specifications. bag-sequence : a sequence of DANS-bag s, that together represent the history of an archived dataset in the DANS Data Vault . bag-store : storage for immutable bag s. All DANS bag-stores combined are called the DANS Data Vault . (version N) DANS-bag : a bag that also conforms to (version N) of the DANS BagIt Profile specifications. base-revision : the revision that is used to reference a complete bag-sequence . Usually, this is the oldest revision . corresponding bag-files : files in different bag s of the same bag-sequence , that are identical or have the exact same path (including the file name) within the bag. DANS Data Vault : the bag-store s of DANS combined. dataset : the DANS implementation of the Information Package concept from the OAIS Reference Model . An archived dataset corresponds to an AIP . A dataset is represented in the * DANS Data Vault as a bag-sequence*. deposit : a dataset as it is delivered to DANS by the depositor , i.e. the SIP , as it is being transformed into an AIP . depositor : the agent sending data to DANS for archiving in the DANS Data Vault . This term corresponds to the Producer in the OAIS Reference Model . inactive bag : a bag that is present in the DANS Data Vault , but no longer disseminated. To the external user the bag appears to be deleted. A bag that is not inactive is active. revision : a DANS-bag that has been successfully archived in the DANS Data Vault . It has a UUID identifier and a timestamp that records its place in the bag-sequence . SIP : Submission Information Package, as defined in the OAIS Reference Model . See also SIP . update-deposit : a deposit that is intended to be added as a revision of an existing, archived dataset . version : a revision that has its own version-DOI . A version of an archived dataset may be updated by new revision s that keep the same version-DOI . version-DOI : a DOI that references a version of an archived dataset . If the version consists of several revisions , the version-DOI resolves to the most recent of those revision s. Requirements \u00b6 1 BagIt related \u00b6 1.1 Validity \u00b6 (SIP) The bag MUST be VALID according to the BagIt specifications. 1.2 bag-info.txt \u00b6 The bag MUST contain a bag-info.txt file. (a) The bag-info.txt file MAY contain at most one element called BagIt-Profile-Version . (b) If present, its value MUST be 0 . (a) The bag-info.txt file MAY contain at most one element called BagIt-Profile-URI . (b) If present, its value MUST be doi:10.17026/dans-z52-ybfe . (a) The bag-info.txt file MUST contain exactly one element called Created . (b) It MUST have a timestamp value in ISO 8601 format, including the time zone and a millisecond precision time part. (c) The values in the Created timestamps SHOULD reflect the correct order of the versions. The bag-info.txt file MAY contain at most one element called Is-Version-Of with a urn:uuid -value. The bag-info.txt file (a) MUST (AIP) or (b) MAY (SIP) contain an entry called EASY-User-Account . If present, its value SHOULD be the user name of an existing EASY user account. 1.3 Manifests \u00b6 (AIP) (a) The bag MUST have a SHA-1 payload manifest. (b) It MUST have entries for all the payload files. The bag MAY have other payload manifests and tag manifests. 2 Structural requirements \u00b6 The bag MUST have a tag-directory called metadata (one word, lowercase letters) directly under the bag base directory. The metadata directory MUST contain the files: (a) metadata/dataset.xml and (b) metadata/files.xml . It MAY contain the files metadata/amd.xml , metadata/emd.xml or metadata/license.txt . (a) The metadata directory MAY contain a directory depositor-info in which the following files MAY be present metadata/depositor-info/agreements.xml with information about agreements between the depositor and DANS. Among other things it specifies the existence of personal data within the files in data . Other files that MAY be present are: either metadata/depositor-info/depositor-agreement.pdf or metadata/depositor-info/depositor-agreement.txt ; metadata/depositor-info/message-from-depositor.txt . metadata/provenance.xml (b) The metadata directory MAY contain a directory original containing a dataset.xml and a files.xml , representing the original deposit (SIP) The metadata directory MAY contain a file called metadata/depositor-info/message-from-depositor.txt . The metadata directory MUST NOT contain any other files or directories. Files in the data directory MUST NOT have filepaths that include the following characters: / , : , * , ? , \" , < , > , | , ; , # . 2.7 original-filepaths.txt \u00b6 A DANS bag MAY contain a file original-filepaths.txt in the root of the bag in UTF-8 encoding. It MUST be formatted as <physical-bag-relative-path><whitespace><original-bag-relative-path> . <physical-bag-relative-path> MUST NOT contain whitespace. <physical-bag-relative-path> MUST correspond one-to-one to an existing payload file. <original-bag-relative-path> MUST correspond one-to-one to a filepath attribute in the file elements in the files.xml . 3 Metadata requirements \u00b6 3.1 metadata/dataset.xml \u00b6 The file metadata/dataset.xml MUST adhere to DANS dataset metadata schema . The file metadata/dataset.xml MAY have one dcterms:license element as a child of the dcmiMetadata element. It MUST NOT have more than one such element. If present, and if it contains an attribute xsi:type=\"dcterms:URI\" , then the element text MUST be one of the URIs of approved licenses . (a) (AIP) The file metadata/dataset.xml MUST contain at least one dcterms:identifier element with an attribute xsi:type=\"id-type:URN\" . The text of this element MUST be a syntactically valid urn:NBN identifier which SHOULD be resolvable. (b) The file metadata/dataset.xml MAY contain one or more dcterms:identifier elements with an attribute xsi:type=\"id-type:DOI\" . The text of this element MUST be a syntactically valid DOI identifier which SHOULD be resolvable. Any dcx-dai:DAI elements MUST contain a syntactically valid Digital Author Identifier (DAI) with a valid check digit. This DAI SHOULD refer to an existing author. The DAI MAY be provided as a info:eu-repo/dai/nl/ URI. Any gml:postList elements nested in gml:Polygon elements: MUST have an even number of values. MUST have at least three different pairs of values, each of which describes one point. MUST start and end with the same pair of values. If a gml:MultiSurface is used, all nested gml:Polygon MUST have the same srsName attribute. Any gml:Point , gml:lowerCorner and gml:upperCorner elements MUST have at least two values. These values MUST be numeric. In case of RD (http://www.opengis.net/def/crs/EPSG/0/28992) the values MUST be within the valid range. Any dc:identifier or dcterms:identifier element with xsi:type=\"id-type:ARCHIS-ZAAK-IDENTIFICATIE MUST have a value of 10 or fewer characters. All URLs used in metadata/dataset.xml MUST be valid URLs with protocol http or https. The file metadata/dataset.xml MUST have a rights holder, either in <dcterms:rightsHolder> or as an author with role RightsHolder . 3.2 metadata/files.xml \u00b6 If the file metadata/files.xml declares the DANS bag file metadata schema namespace then it MUST adhere to that schema. The document element MUST be files . The document element MUST contain zero or more file elements, and MUST NOT contain other elements. Each file element MUST have a filepath attribute which contains the bag local path to the payload file described. When an original-filepaths.txt exists, rule 2.7.2 applies. Directories and non-payload files MUST NOT be described by a file element. There MUST NOT be more than one file element corresponding to a payload file and every payload file MUST be described by a file element. Each file element MUST contain at least one dcterms:format element containing the Media Type of the file described. Each file element MAY contain any number of other DC or DCTERMS elements describing the file. It MUST NOT contain elements from other namespaces, unless permitted by the DANS bag file metadata schema schema. Each file element MAY contain either one dcterms:accessRights (DEPRECATED) or files:accessibleToRights and/or files:visibleToRights (RECOMMENDED). The values of these elements are limited to ANONYMOUS, RESTRICTED_REQUEST and NONE. It is recommended to make files visible to all, by setting files:visibleToRights to ANONYMOUS. 3.3 metadata/depositor-info/agreements.xml \u00b6 (AIP) The file metadata/depositor-info/agreements.xml MUST adhere to DANS deposit agreement metadata . 3.4 metadata/depositor-info/message-from-depositor.txt \u00b6 The file metadata/depositor-info/message-from-depositor.txt MUST be a plain text file using the UTF-8 character encoding. It SHOULD contain any remarks that the depositor wants to convey to the data manager who is to curate this deposit. 4 Bag sequence requirements \u00b6 (AIP) If bag-info.txt contains the element Is-Version-Of the UUID in its value MUST be the bag-id of an existing, archived bag. This bag SHOULD be the base revision for the dataset that is to be updated by the deposit. 2 (AIP) The bags of a bag-sequence MUST be stored in the same bag-store. 3 (AIP) The EASY-User-Account in bag-info.txt MUST be identical in all the bags of a bag-sequence. References \u00b6 AIP - Archival Information Package bag-store - storage for immutable, virtually-valid bags BagIt - packaging format on which the DANS Data Vault is based DANS administrative metadata - shema for administrative metadata DANS bag file metadata schema - schema for content file specific metadata DANS dataset metadata schema - schema for dataset level metadata DANS DCTERMS extension: Digital Author Identifier - extensions to accommodate Digital Author Identifiers DANS DCTERMS extension: Geography Markup Language - extensions to accommodate Geography Markup Language DANS deposit agreement metadata - schema for metadata about the agreement between DANS and the depositor DC - Dublin Core metadata elements DCTERMS - metadata schema from which elements are used in several DANS metadata schemas DOI - Digital Object Identifier EASY administrative metadata schema - legacy schema for administrative metadata EASY administrative workflow metadata schema - legacy helper schema for EASY administrative metadata schema EASY metadata schema - legacy schema for dataset level metadata GML 3.1.1 Simplified Features profile Levels 0 and 1 - Profile of Geography Mark-up Language ISO 8601 - standard for formatting dates and times Media Type - identifiers for file formats OAIS Reference Model - reference model for long term preservation archives RFC 2119 - specification for use of requirement level key words SIP - Submission Information Package URIs of approved licenses - licenses that may be used for datasets deposited in the DANS archive urn:uuid - URN scheme for UUID s urn:NBN - URN scheme for National Bibliographic Numbers UUID - universally unique identifiers XML Schema - constraint language for specifying types of XML documents","title":"v0.0.0-DEPRECATED"},{"location":"versions/0.0.0/#dans-bagit-profile-v000","text":"","title":"DANS BagIt Profile v0.0.0"},{"location":"versions/0.0.0/#introduction","text":"","title":"Introduction"},{"location":"versions/0.0.0/#version","text":"Document version: 0.0.0 Publication date: 2019-05-02","title":"Version"},{"location":"versions/0.0.0/#status","text":"Status of this document is PUBLISHED. THIS VERSION OF THE PROFILE IS DEPRECATED AND ONLY APPLIES TO THE LEGACY EASY SWORD2 SERVICE.","title":"Status"},{"location":"versions/0.0.0/#scope","text":"This document specifies what constitutes an acceptable DANS bag. This includes all the requirements for a bag to be successfully processed by the ingest workflow. What is acceptable as a SIP is sometimes not exactly the same as what is acceptable as an AIP . Where these are different, this is documented. Version 0.0.0 covers the de facto requirements that are used by the DANS EASY archive. In this context a SIP is the bag as it is submitted by the client and an AIP is the bag as it is stored in the DANS EASY Vault, which is implemented as a bag-store .","title":"Scope"},{"location":"versions/0.0.0/#overview-and-conventions","text":"","title":"Overview and conventions"},{"location":"versions/0.0.0/#key-words","text":"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \" OPTIONAL\" in this document are to be interpreted as described in RFC 2119 . The key word \"SHOULD\" is also used to specify requirements that are impossible or impractical to check by the archival organization (i.e. DANS). The client should do its best to meet these requirements, but not rely on their being validated by the archival organization.","title":"Key words"},{"location":"versions/0.0.0/#subdivisions","text":"The requirements are subdivided into the following sections: BagIt-related requirements - requirements that refer back to the BagIt specifications Structural requirements - requirements regarding the directories and files in the bag Metadata requirements - requirements regarding the metadata files included in the bag Bag sequence requirements - requirements regarding the metadata that records how a sequence of bags can represent the history of a dataset The sections are numbered and may have numbered subsections. The requirements themselves are stated as numbered rules. To uniquely identify a specific rule, use the notation <section-nr>[.<subsection-nr>].<rule-nr> , e.g., 2.3.4 for the fourth rule in subsection 3 of section 2.","title":"Subdivisions"},{"location":"versions/0.0.0/#sip-vs-aip","text":"Rules that only apply to SIPs or AIPs are annotated with the comments \" (SIP) \" and \" (AIP) \" respectively. All other rules apply to SIP and AIP alike.","title":"SIP vs AIP"},{"location":"versions/0.0.0/#stand-alone-vs-in-sequence-context-validation","text":"There are two levels of validation: stand-alone : this includes the validation steps that can be performed without taking into account any data outside the bag, in particular the bag store that the bag is (to be) stored in. This means that only the rules in sections 1-3 are checked in this level. in-sequence-context : this includes all the checks done in stand-alone validation plus checks that involve the bag-sequence that the bag is (to be) part of. This means all the rules in this document are checked. Stand-alone validation can be useful when you do not have access to the target bag store. Another reason to do only stand-alone validation may be that the overhead of doing calls to the bag store over the network is too high.","title":"Stand-alone vs in-sequence-context validation"},{"location":"versions/0.0.0/#xml-namespaces","text":"When referring to XML element or attribute names or attribute values that have a prefix (such as dcterms:identifier ) an element in a certain namespace is intended. The table below lists the mapping from prefix to namespace. In the actual document, the namespace may be bound to a different prefix, or be the default namespace. Prefix Namespace URI Namespace documentation am http://easy.dans.knaw.nl/schemas/bag/metadata/agreements/ DANS deposit agreement metadata amd http://easy.dans.knaw.nl/easy/dataset-administrative-metadata/ EASY administrative metadata schema dc http://purl.org/dc/elements/1.1/ DC dcterms http://purl.org/dc/terms/ DCTERMS dcx-dai http://easy.dans.knaw.nl/schemas/dcx/dai/ DANS DCTERMS extension: Digital Author Identifier dcx-gml http://easy.dans.knaw.nl/schemas/dcx/gml/ DANS DCTERMS extension: Geography Markup Language ddm http://easy.dans.knaw.nl/schemas/md/ddm/ DANS dataset metadata schema emd http://easy.dans.knaw.nl/easy/easymetadata/ EASY metadata schema files http://easy.dans.knaw.nl/schemas/bag/metadata/files/ DANS bag file metadata schema gml http://www.opengis.net/gml GML 3.1.1 Simplified Features profile Levels 0 and 1 id-type http://easy.dans.knaw.nl/schemas/vocab/identifier-type/ DANS controlled list of dcterms:identifier types wfs http://easy.dans.knaw.nl/easy/workflow/ EASY administrative workflow metadata schema xsi http://www.w3.org/2001/XMLSchema-instance XML Schema","title":"XML namespaces"},{"location":"versions/0.0.0/#name-spelling","text":"Exact names are specified in code style. The capitalization of those names must be exactly as specified, unless it is explicitly stated that the name is case insensitive. If the name is a file path it is relative to the bag base directory.","title":"Name spelling"},{"location":"versions/0.0.0/#glossary","text":"This section defines a number of terms that may be useful when discussing this specification. Several of these terms are used in the Requirements section of this document. Where terms are used in the definitions of other terms, they are printed in italics . AIP : Archival Information Package, as defined in the OAIS Reference Model . See also AIP . bag : a data package conforming to the BagIt specifications. bag-sequence : a sequence of DANS-bag s, that together represent the history of an archived dataset in the DANS Data Vault . bag-store : storage for immutable bag s. All DANS bag-stores combined are called the DANS Data Vault . (version N) DANS-bag : a bag that also conforms to (version N) of the DANS BagIt Profile specifications. base-revision : the revision that is used to reference a complete bag-sequence . Usually, this is the oldest revision . corresponding bag-files : files in different bag s of the same bag-sequence , that are identical or have the exact same path (including the file name) within the bag. DANS Data Vault : the bag-store s of DANS combined. dataset : the DANS implementation of the Information Package concept from the OAIS Reference Model . An archived dataset corresponds to an AIP . A dataset is represented in the * DANS Data Vault as a bag-sequence*. deposit : a dataset as it is delivered to DANS by the depositor , i.e. the SIP , as it is being transformed into an AIP . depositor : the agent sending data to DANS for archiving in the DANS Data Vault . This term corresponds to the Producer in the OAIS Reference Model . inactive bag : a bag that is present in the DANS Data Vault , but no longer disseminated. To the external user the bag appears to be deleted. A bag that is not inactive is active. revision : a DANS-bag that has been successfully archived in the DANS Data Vault . It has a UUID identifier and a timestamp that records its place in the bag-sequence . SIP : Submission Information Package, as defined in the OAIS Reference Model . See also SIP . update-deposit : a deposit that is intended to be added as a revision of an existing, archived dataset . version : a revision that has its own version-DOI . A version of an archived dataset may be updated by new revision s that keep the same version-DOI . version-DOI : a DOI that references a version of an archived dataset . If the version consists of several revisions , the version-DOI resolves to the most recent of those revision s.","title":"Glossary"},{"location":"versions/0.0.0/#requirements","text":"","title":"Requirements"},{"location":"versions/0.0.0/#1-bagit-related","text":"","title":"1 BagIt related"},{"location":"versions/0.0.0/#11-validity","text":"(SIP) The bag MUST be VALID according to the BagIt specifications.","title":"1.1 Validity"},{"location":"versions/0.0.0/#12-bag-infotxt","text":"The bag MUST contain a bag-info.txt file. (a) The bag-info.txt file MAY contain at most one element called BagIt-Profile-Version . (b) If present, its value MUST be 0 . (a) The bag-info.txt file MAY contain at most one element called BagIt-Profile-URI . (b) If present, its value MUST be doi:10.17026/dans-z52-ybfe . (a) The bag-info.txt file MUST contain exactly one element called Created . (b) It MUST have a timestamp value in ISO 8601 format, including the time zone and a millisecond precision time part. (c) The values in the Created timestamps SHOULD reflect the correct order of the versions. The bag-info.txt file MAY contain at most one element called Is-Version-Of with a urn:uuid -value. The bag-info.txt file (a) MUST (AIP) or (b) MAY (SIP) contain an entry called EASY-User-Account . If present, its value SHOULD be the user name of an existing EASY user account.","title":"1.2 bag-info.txt"},{"location":"versions/0.0.0/#13-manifests","text":"(AIP) (a) The bag MUST have a SHA-1 payload manifest. (b) It MUST have entries for all the payload files. The bag MAY have other payload manifests and tag manifests.","title":"1.3 Manifests"},{"location":"versions/0.0.0/#2-structural-requirements","text":"The bag MUST have a tag-directory called metadata (one word, lowercase letters) directly under the bag base directory. The metadata directory MUST contain the files: (a) metadata/dataset.xml and (b) metadata/files.xml . It MAY contain the files metadata/amd.xml , metadata/emd.xml or metadata/license.txt . (a) The metadata directory MAY contain a directory depositor-info in which the following files MAY be present metadata/depositor-info/agreements.xml with information about agreements between the depositor and DANS. Among other things it specifies the existence of personal data within the files in data . Other files that MAY be present are: either metadata/depositor-info/depositor-agreement.pdf or metadata/depositor-info/depositor-agreement.txt ; metadata/depositor-info/message-from-depositor.txt . metadata/provenance.xml (b) The metadata directory MAY contain a directory original containing a dataset.xml and a files.xml , representing the original deposit (SIP) The metadata directory MAY contain a file called metadata/depositor-info/message-from-depositor.txt . The metadata directory MUST NOT contain any other files or directories. Files in the data directory MUST NOT have filepaths that include the following characters: / , : , * , ? , \" , < , > , | , ; , # .","title":"2 Structural requirements"},{"location":"versions/0.0.0/#27-original-filepathstxt","text":"A DANS bag MAY contain a file original-filepaths.txt in the root of the bag in UTF-8 encoding. It MUST be formatted as <physical-bag-relative-path><whitespace><original-bag-relative-path> . <physical-bag-relative-path> MUST NOT contain whitespace. <physical-bag-relative-path> MUST correspond one-to-one to an existing payload file. <original-bag-relative-path> MUST correspond one-to-one to a filepath attribute in the file elements in the files.xml .","title":"2.7 original-filepaths.txt"},{"location":"versions/0.0.0/#3-metadata-requirements","text":"","title":"3 Metadata requirements"},{"location":"versions/0.0.0/#31-metadatadatasetxml","text":"The file metadata/dataset.xml MUST adhere to DANS dataset metadata schema . The file metadata/dataset.xml MAY have one dcterms:license element as a child of the dcmiMetadata element. It MUST NOT have more than one such element. If present, and if it contains an attribute xsi:type=\"dcterms:URI\" , then the element text MUST be one of the URIs of approved licenses . (a) (AIP) The file metadata/dataset.xml MUST contain at least one dcterms:identifier element with an attribute xsi:type=\"id-type:URN\" . The text of this element MUST be a syntactically valid urn:NBN identifier which SHOULD be resolvable. (b) The file metadata/dataset.xml MAY contain one or more dcterms:identifier elements with an attribute xsi:type=\"id-type:DOI\" . The text of this element MUST be a syntactically valid DOI identifier which SHOULD be resolvable. Any dcx-dai:DAI elements MUST contain a syntactically valid Digital Author Identifier (DAI) with a valid check digit. This DAI SHOULD refer to an existing author. The DAI MAY be provided as a info:eu-repo/dai/nl/ URI. Any gml:postList elements nested in gml:Polygon elements: MUST have an even number of values. MUST have at least three different pairs of values, each of which describes one point. MUST start and end with the same pair of values. If a gml:MultiSurface is used, all nested gml:Polygon MUST have the same srsName attribute. Any gml:Point , gml:lowerCorner and gml:upperCorner elements MUST have at least two values. These values MUST be numeric. In case of RD (http://www.opengis.net/def/crs/EPSG/0/28992) the values MUST be within the valid range. Any dc:identifier or dcterms:identifier element with xsi:type=\"id-type:ARCHIS-ZAAK-IDENTIFICATIE MUST have a value of 10 or fewer characters. All URLs used in metadata/dataset.xml MUST be valid URLs with protocol http or https. The file metadata/dataset.xml MUST have a rights holder, either in <dcterms:rightsHolder> or as an author with role RightsHolder .","title":"3.1 metadata/dataset.xml"},{"location":"versions/0.0.0/#32-metadatafilesxml","text":"If the file metadata/files.xml declares the DANS bag file metadata schema namespace then it MUST adhere to that schema. The document element MUST be files . The document element MUST contain zero or more file elements, and MUST NOT contain other elements. Each file element MUST have a filepath attribute which contains the bag local path to the payload file described. When an original-filepaths.txt exists, rule 2.7.2 applies. Directories and non-payload files MUST NOT be described by a file element. There MUST NOT be more than one file element corresponding to a payload file and every payload file MUST be described by a file element. Each file element MUST contain at least one dcterms:format element containing the Media Type of the file described. Each file element MAY contain any number of other DC or DCTERMS elements describing the file. It MUST NOT contain elements from other namespaces, unless permitted by the DANS bag file metadata schema schema. Each file element MAY contain either one dcterms:accessRights (DEPRECATED) or files:accessibleToRights and/or files:visibleToRights (RECOMMENDED). The values of these elements are limited to ANONYMOUS, RESTRICTED_REQUEST and NONE. It is recommended to make files visible to all, by setting files:visibleToRights to ANONYMOUS.","title":"3.2 metadata/files.xml"},{"location":"versions/0.0.0/#33-metadatadepositor-infoagreementsxml","text":"(AIP) The file metadata/depositor-info/agreements.xml MUST adhere to DANS deposit agreement metadata .","title":"3.3 metadata/depositor-info/agreements.xml"},{"location":"versions/0.0.0/#34-metadatadepositor-infomessage-from-depositortxt","text":"The file metadata/depositor-info/message-from-depositor.txt MUST be a plain text file using the UTF-8 character encoding. It SHOULD contain any remarks that the depositor wants to convey to the data manager who is to curate this deposit.","title":"3.4 metadata/depositor-info/message-from-depositor.txt"},{"location":"versions/0.0.0/#4-bag-sequence-requirements","text":"(AIP) If bag-info.txt contains the element Is-Version-Of the UUID in its value MUST be the bag-id of an existing, archived bag. This bag SHOULD be the base revision for the dataset that is to be updated by the deposit. 2 (AIP) The bags of a bag-sequence MUST be stored in the same bag-store. 3 (AIP) The EASY-User-Account in bag-info.txt MUST be identical in all the bags of a bag-sequence.","title":"4 Bag sequence requirements"},{"location":"versions/0.0.0/#references","text":"AIP - Archival Information Package bag-store - storage for immutable, virtually-valid bags BagIt - packaging format on which the DANS Data Vault is based DANS administrative metadata - shema for administrative metadata DANS bag file metadata schema - schema for content file specific metadata DANS dataset metadata schema - schema for dataset level metadata DANS DCTERMS extension: Digital Author Identifier - extensions to accommodate Digital Author Identifiers DANS DCTERMS extension: Geography Markup Language - extensions to accommodate Geography Markup Language DANS deposit agreement metadata - schema for metadata about the agreement between DANS and the depositor DC - Dublin Core metadata elements DCTERMS - metadata schema from which elements are used in several DANS metadata schemas DOI - Digital Object Identifier EASY administrative metadata schema - legacy schema for administrative metadata EASY administrative workflow metadata schema - legacy helper schema for EASY administrative metadata schema EASY metadata schema - legacy schema for dataset level metadata GML 3.1.1 Simplified Features profile Levels 0 and 1 - Profile of Geography Mark-up Language ISO 8601 - standard for formatting dates and times Media Type - identifiers for file formats OAIS Reference Model - reference model for long term preservation archives RFC 2119 - specification for use of requirement level key words SIP - Submission Information Package URIs of approved licenses - licenses that may be used for datasets deposited in the DANS archive urn:uuid - URN scheme for UUID s urn:NBN - URN scheme for National Bibliographic Numbers UUID - universally unique identifiers XML Schema - constraint language for specifying types of XML documents","title":"References"},{"location":"versions/1.3.0/","text":"DANS BagIt Profile v1.3.0 \u00b6 Introduction \u00b6 Version \u00b6 Document version: 1.3.0 Publication date: 2025-10-22 Status \u00b6 PUBLISHED Changes \u00b6 Changed from version 1.2.0 to 1.3.0 \u00b6 Added Getty AAT to the controlled vocabularies in rule 3.1.12. Scope \u00b6 This document specifies what constitutes an acceptable DANS bag. This includes all the requirements for a bag to be successfully processed by the ingest workflow. Versions 1.x.x cover the requirements used by the DANS Data Stations and the Vault as a Service. Overview and conventions \u00b6 Keywords \u00b6 The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \" OPTIONAL\" in this document are to be interpreted as described in RFC 2119 . The keyword \"SHOULD\" is also used to specify requirements that are impossible or impractical to check by the archival organization (i.e. DANS). The client should do its best to meet these requirements, but not rely on their being validated by the archival organization. Subdivisions \u00b6 The requirements are subdivided into the following sections: BagIt-related requirements - requirements that refer back to the BagIt specifications Structural requirements - requirements regarding the directories and files in the bag Metadata requirements - requirements regarding the metadata files included in the bag Data Station context requirements - requirements regarding the Data Station where the dataset is to be created or modified; these do not apply to the Vault as a Service Vault as a Service context requirements - requirements that are only applicable to the Vault as a Service and not to the Data Stations The sections are numbered and may have numbered subsections. The requirements themselves are stated as numbered rules. Rules may have parts that are labeled with letters: (a), (b), (c), etc. To uniquely identify a specific rule, use the notation <section-nr>[.<subsection-nr>].<rule-nr> [(<letter>)] Example: 2.3.4 (e) means part e of the fourth rule in subsection 3 of section 2. XML namespaces \u00b6 When referring to XML element or attribute names or attribute values that have a prefix (such as dcterms:identifier ) an element in a certain namespace is intended. The table below lists the mapping from prefix to namespace. In the actual document, the namespace may be bound to a different prefix, or be the default namespace. Prefix Namespace URI Namespace documentation dc http://purl.org/dc/elements/1.1/ DC dcterms http://purl.org/dc/terms/ DCTERMS dcx-dai http://easy.dans.knaw.nl/schemas/dcx/dai/ DANS DCTERMS extension: Digital Author Identifier dcx-gml http://easy.dans.knaw.nl/schemas/dcx/gml/ DANS DCTERMS extension: Geography Markup Language ddm http://schemas.dans.knaw.nl/dataset/ddm-v2/ DANS dataset metadata schema files http://easy.dans.knaw.nl/schemas/bag/metadata/files/ DANS bag file metadata schema gml http://www.opengis.net/gml GML 3.1.1 Simplified Features profile Levels 0 and 1 id-type http://easy.dans.knaw.nl/schemas/vocab/identifier-type/ DANS controlled list of dcterms:identifier types xsi http://www.w3.org/2001/XMLSchema-instance XML Schema Names \u00b6 Exact names are specified in code style. The capitalization of those names must be exactly as specified, unless it is explicitly stated that the name is case-insensitive. If the name is a file path it is relative to the bag base directory. Glossary \u00b6 This section defines a number of terms that may be useful when discussing this specification. Several of these terms are used in the Requirements section of this document. Where terms are used in the definitions of other terms, they are printed in italics . bag : a data package conforming to the BagIt specifications. bag-ID : a urn:uuid given to every deposit upon delivery to DANS. The bag-ID of the first version of a dataset is also known as the sword token . (version N) DANS-bag : a bag that also conforms to (version N) of the DANS BagIt Profile specifications. DANS Data Station : the publishing and archiving service of DANS for datasets Vault as a Service : the service that allows customers to store datasets in the DANS Data Vault, without publishing them in a Data Station DANS SWORD Service : the DANS implementation of the SWORDv2 protocol dataset : an information package containing data and metadata published in a DANS Data Station . A dataset may have multiple versions. deposit : a package containing data and metadata sent to DANS by the depositor to create a new dataset or dataset version. depositor : the agent sending data to DANS for publishing in a DANS Data Station . This term corresponds to the Producer in the OAIS Reference Model . deaccessioned version : a dataset that is present in a DANS Data Station , but no longer disseminated. To the external user the dataset version appears to be deleted, only a tombstone remains. update-deposit : a deposit that is intended to create a new version of an existing dataset . version-bag-ID : a bag-ID that references a version of a dataset . If the dataset consists of several versions , the DOI resolves to the most recent of those version s. All versions of one dataset have the same sword token . sword token : a urn:uuid assigned to first version bags upon submission through the DANS SWORD Service . This UUID is used when depositing an update-deposit and to identify all versions of one dataset. Requirements \u00b6 1 BagIt related \u00b6 1.1 Validity \u00b6 The bag MUST be valid according to the BagIt specifications v1.0 (RFC 8493). 1.2 bag-info.txt \u00b6 The bag MUST contain a bag-info.txt file. The bag-info.txt file MAY contain one or more elements called Created . This element, when present, is ignored. The only reason to allow it is for backwards compatibility with v1.0.0 of the DANS BagIt Profile. (a) The bag-info.txt file MAY contain at most one element called Is-Version-Of (b) with a urn:uuid -value. See rules 4.1 and 5.1 for the context requirements if Is-Version-Of is provided. (a) The bag-info.txt file MAY contain at most one element called Has-Organizational-Identifier . (b) If this Has-Organizational-Identifier is given, at most one Has-Organizational-Identifier-Version MAY be present, containing a version number. (c) If Has-Organizational-Identifier is present then its value MUST start with one of the approved prefixes. Each client will be assigned a unique prefix to use for this purpose. 1.3 Manifests \u00b6 If the bag has only one payload manifest it MUST NOT use the MD5 algorithm. However, it MAY have an MD5 payload manifest in addition to other payload manifests. 2 Structural requirements \u00b6 The bag MUST have a tag-directory called metadata directly under the bag base directory. The metadata directory MUST contain the files: (a) metadata/dataset.xml and (b) metadata/files.xml . The metadata directory MUST NOT contain any other files or directories. A DANS bag MAY contain a file original-filepaths.txt in the root of the bag in UTF-8 encoding. For the content requirements and purpose of this file, if it exists, see Section 3.3. 3 Metadata requirements \u00b6 3.1 metadata/dataset.xml \u00b6 The file metadata/dataset.xml MUST adhere to DANS dataset metadata schema . The file metadata/dataset.xml MUST have at least one dcterms:license element as a child of the dcmiMetadata element. Exactly one of these elements MUST have the attribute xsi:type=\"dcterms:URI\" and have a URI as element text. (See also rule 4.2.) Any dcx-dai:<scheme> elements (i.e. (a) DAI, (b) ISNI or (c) ORCID) MUST contain an identifier that complies with the syntaxis for the selected identifier scheme URI. Any gml:posList elements nested in gml:Polygon elements: MUST have an even number of values. MUST have at least three different pairs of values, each of which describes one point. MUST start and end with the same pair of values. If a gml:MultiSurface is used, all nested gml:Polygon MUST have the same srsName attribute. Any gml:Point/gml:pos (pos nested in a Point), gml:lowerCorner and gml:upperCorner elements MUST have at least two values. These values MUST be numeric. In case the srsName specifies the RD scheme the values MUST be within the valid range. Any dc:identifier or dcterms:identifier element with attribute xsi:type=\"id-type:ARCHIS-ZAAK-IDENTIFICATIE MUST have a value of 10 or fewer characters. All URLs used in metadata/dataset.xml MUST be valid URLs with protocol http or https . The file metadata/dataset.xml MUST have one or more rights holders, each in a <dcterms:rightsHolder> element as a child of the dcmiMetadata element. dcx-dai:author and dcx-dai:organization elements MUST NOT have the role RightsHolder . The following elements, if present, MUST have exactly one of the attributes valueURI or valueCode (and MUST NOT have both). ddm:reportNumber ddm:acquisitionMethod ddm:subject ddm:temporal (a) For the schemeURI listed below, the value of a valueURI attribute MUST be a term URI that is part of the controlled vocabulary specified in the schemeURI attribute of the same element. This is validated against the version currently hosted by the DANS controlled vocabulary service . (b) If a valueCode attribute is used, it MUST correspond to a valid term in the controlled vocabulary. This rule applies to the following schemeURIs: https://data.cultureelerfgoed.nl/term/id/rn/a4a7933c-e096-4bcf-a921-4f70a78749fe (ABR) https://data.cultureelerfgoed.nl/term/id/abr/b6df7840-67bf-48bd-aa56-7ee39435d2ed (ABR) https://data.cultureelerfgoed.nl/term/id/abr/e9546020-4b28-4819-b0c2-29e7c864c5c0 (ABR Complextypen) https://data.cultureelerfgoed.nl/term/id/abr/22cbb070-6542-48f0-8afe-7d98d398cc0b (ABR Artefacten) https://data.cultureelerfgoed.nl/term/id/abr/9b688754-1315-484b-9c89-8817e87c1e84 (ABR Periodes) https://data.cultureelerfgoed.nl/term/id/abr/7a99aaba-c1e7-49a4-9dd8-d295dbcc870e (ABR Rapporttypes) https://data.cultureelerfgoed.nl/term/id/abr/554ca1ec-3ed8-42d3-ae4b-47bcb848b238 (ABR Verwervingswijzen) https://vocabularies.dans.knaw.nl/collections/ (DANS Collections) http://vocab.getty.edu/aat/ (Getty AAT) 3.2 metadata/files.xml \u00b6 The file metadata/files.xml MUST adhere to DANS bag file metadata schema . Each file element's filepath attribute MUST contain the bag local path to the payload file described. When an original-filepaths.txt exists, rule 3.3.1 applies. Directories and non-payload files MUST NOT be described by a file element. There MUST NOT be more than one file element corresponding to a payload file and every payload file MUST be described by a file element. 3.3 original-filepaths.txt \u00b6 The purpose of original-filepaths.txt is to provide a complete mapping from renamed files back to their original full path (including filename). It MUST be a text file encoded with UTF-8. The lines of original-filepaths.txt MUST be formatted as <physical-bag-relative-path><whitespace><original-bag-relative-path> , where <physical-bag-relative-path> MUST NOT contain whitespace. <physical-bag-relative-path> MUST correspond one-to-one to an existing payload file. <original-bag-relative-path> MUST correspond one-to-one to a filepath attribute in the file elements in the files.xml . 4 Data Station context requirements \u00b6 If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the target Data Station with the following properties: (a) it has a dansSwordToken with the same value as Is-Version-Of (b) it has a dansOtherId with the same value as bag-info.txt 's Has-Organizational-Identifier (or both are absent). The metadata/dataset.xml element dcmiMetadata/dcterms:license with attribute xsi:type=\"dcterms:URI\" (see 3.1.2) must be one of the licenses supported by the target Data Station. The date in metadata/dataset.xml element profile/available MUST NOT be further in the future than the limit set on embargoes in the target Data Station. The bag MUST NOT contain a payload file data/original-metadata.zip . 5 Vault as a Service context requirements \u00b6 If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the Vault that has a dansSwordToken with the same value as Is-Version-Of . (a) The file metadata/dataset.xml MAY contain at most one dcterms:identifier element with an attribute xsi:type=\"id-type:DOI\" . (b) If present, the text of this element MUST be a syntactically valid DOI identifier which SHOULD be resolvable. References \u00b6 BagIt - packaging format on which the DANS Data Station ingest process is based DANS bag file metadata schema - schema for content file specific metadata DANS dataset metadata schema - schema for dataset level metadata DANS controlled list of dcterms:identifier types - list of valid values for xsi:id-type DANS DCTERMS extension: Digital Author Identifier - extensions to accommodate Digital Author Identifiers DANS DCTERMS extension: Geography Markup Language - extensions to accommodate Geography Markup Language DC - Dublin Core metadata elements DCTERMS - metadata schema from which elements are used in several DANS metadata schemas DOI - Digital Object Identifier GML 3.1.1 Simplified Features profile Levels 0 and 1 - Profile of Geography Mark-up Language ISO 8601 - standard for formatting dates and times Media Type - identifiers for file formats OAIS Reference Model - reference model for long term preservation archives RFC 2119 - specification for use of requirement level keywords RD - Stelsel van de Rijksdriehoeksmeting , a scheme for geographical locations urn:uuid - URN scheme for UUID s urn:NBN - URN scheme for National Bibliographic Numbers UUID - universally unique identifiers XML Schema - constraint language for specifying types of XML documents","title":"v1.3.0"},{"location":"versions/1.3.0/#dans-bagit-profile-v130","text":"","title":"DANS BagIt Profile v1.3.0"},{"location":"versions/1.3.0/#introduction","text":"","title":"Introduction"},{"location":"versions/1.3.0/#version","text":"Document version: 1.3.0 Publication date: 2025-10-22","title":"Version"},{"location":"versions/1.3.0/#status","text":"PUBLISHED","title":"Status"},{"location":"versions/1.3.0/#changes","text":"","title":"Changes"},{"location":"versions/1.3.0/#changed-from-version-120-to-130","text":"Added Getty AAT to the controlled vocabularies in rule 3.1.12.","title":"Changed from version 1.2.0 to 1.3.0"},{"location":"versions/1.3.0/#scope","text":"This document specifies what constitutes an acceptable DANS bag. This includes all the requirements for a bag to be successfully processed by the ingest workflow. Versions 1.x.x cover the requirements used by the DANS Data Stations and the Vault as a Service.","title":"Scope"},{"location":"versions/1.3.0/#overview-and-conventions","text":"","title":"Overview and conventions"},{"location":"versions/1.3.0/#keywords","text":"The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \" OPTIONAL\" in this document are to be interpreted as described in RFC 2119 . The keyword \"SHOULD\" is also used to specify requirements that are impossible or impractical to check by the archival organization (i.e. DANS). The client should do its best to meet these requirements, but not rely on their being validated by the archival organization.","title":"Keywords"},{"location":"versions/1.3.0/#subdivisions","text":"The requirements are subdivided into the following sections: BagIt-related requirements - requirements that refer back to the BagIt specifications Structural requirements - requirements regarding the directories and files in the bag Metadata requirements - requirements regarding the metadata files included in the bag Data Station context requirements - requirements regarding the Data Station where the dataset is to be created or modified; these do not apply to the Vault as a Service Vault as a Service context requirements - requirements that are only applicable to the Vault as a Service and not to the Data Stations The sections are numbered and may have numbered subsections. The requirements themselves are stated as numbered rules. Rules may have parts that are labeled with letters: (a), (b), (c), etc. To uniquely identify a specific rule, use the notation <section-nr>[.<subsection-nr>].<rule-nr> [(<letter>)] Example: 2.3.4 (e) means part e of the fourth rule in subsection 3 of section 2.","title":"Subdivisions"},{"location":"versions/1.3.0/#xml-namespaces","text":"When referring to XML element or attribute names or attribute values that have a prefix (such as dcterms:identifier ) an element in a certain namespace is intended. The table below lists the mapping from prefix to namespace. In the actual document, the namespace may be bound to a different prefix, or be the default namespace. Prefix Namespace URI Namespace documentation dc http://purl.org/dc/elements/1.1/ DC dcterms http://purl.org/dc/terms/ DCTERMS dcx-dai http://easy.dans.knaw.nl/schemas/dcx/dai/ DANS DCTERMS extension: Digital Author Identifier dcx-gml http://easy.dans.knaw.nl/schemas/dcx/gml/ DANS DCTERMS extension: Geography Markup Language ddm http://schemas.dans.knaw.nl/dataset/ddm-v2/ DANS dataset metadata schema files http://easy.dans.knaw.nl/schemas/bag/metadata/files/ DANS bag file metadata schema gml http://www.opengis.net/gml GML 3.1.1 Simplified Features profile Levels 0 and 1 id-type http://easy.dans.knaw.nl/schemas/vocab/identifier-type/ DANS controlled list of dcterms:identifier types xsi http://www.w3.org/2001/XMLSchema-instance XML Schema","title":"XML namespaces"},{"location":"versions/1.3.0/#names","text":"Exact names are specified in code style. The capitalization of those names must be exactly as specified, unless it is explicitly stated that the name is case-insensitive. If the name is a file path it is relative to the bag base directory.","title":"Names"},{"location":"versions/1.3.0/#glossary","text":"This section defines a number of terms that may be useful when discussing this specification. Several of these terms are used in the Requirements section of this document. Where terms are used in the definitions of other terms, they are printed in italics . bag : a data package conforming to the BagIt specifications. bag-ID : a urn:uuid given to every deposit upon delivery to DANS. The bag-ID of the first version of a dataset is also known as the sword token . (version N) DANS-bag : a bag that also conforms to (version N) of the DANS BagIt Profile specifications. DANS Data Station : the publishing and archiving service of DANS for datasets Vault as a Service : the service that allows customers to store datasets in the DANS Data Vault, without publishing them in a Data Station DANS SWORD Service : the DANS implementation of the SWORDv2 protocol dataset : an information package containing data and metadata published in a DANS Data Station . A dataset may have multiple versions. deposit : a package containing data and metadata sent to DANS by the depositor to create a new dataset or dataset version. depositor : the agent sending data to DANS for publishing in a DANS Data Station . This term corresponds to the Producer in the OAIS Reference Model . deaccessioned version : a dataset that is present in a DANS Data Station , but no longer disseminated. To the external user the dataset version appears to be deleted, only a tombstone remains. update-deposit : a deposit that is intended to create a new version of an existing dataset . version-bag-ID : a bag-ID that references a version of a dataset . If the dataset consists of several versions , the DOI resolves to the most recent of those version s. All versions of one dataset have the same sword token . sword token : a urn:uuid assigned to first version bags upon submission through the DANS SWORD Service . This UUID is used when depositing an update-deposit and to identify all versions of one dataset.","title":"Glossary"},{"location":"versions/1.3.0/#requirements","text":"","title":"Requirements"},{"location":"versions/1.3.0/#1-bagit-related","text":"","title":"1 BagIt related"},{"location":"versions/1.3.0/#11-validity","text":"The bag MUST be valid according to the BagIt specifications v1.0 (RFC 8493).","title":"1.1 Validity"},{"location":"versions/1.3.0/#12-bag-infotxt","text":"The bag MUST contain a bag-info.txt file. The bag-info.txt file MAY contain one or more elements called Created . This element, when present, is ignored. The only reason to allow it is for backwards compatibility with v1.0.0 of the DANS BagIt Profile. (a) The bag-info.txt file MAY contain at most one element called Is-Version-Of (b) with a urn:uuid -value. See rules 4.1 and 5.1 for the context requirements if Is-Version-Of is provided. (a) The bag-info.txt file MAY contain at most one element called Has-Organizational-Identifier . (b) If this Has-Organizational-Identifier is given, at most one Has-Organizational-Identifier-Version MAY be present, containing a version number. (c) If Has-Organizational-Identifier is present then its value MUST start with one of the approved prefixes. Each client will be assigned a unique prefix to use for this purpose.","title":"1.2 bag-info.txt"},{"location":"versions/1.3.0/#13-manifests","text":"If the bag has only one payload manifest it MUST NOT use the MD5 algorithm. However, it MAY have an MD5 payload manifest in addition to other payload manifests.","title":"1.3 Manifests"},{"location":"versions/1.3.0/#2-structural-requirements","text":"The bag MUST have a tag-directory called metadata directly under the bag base directory. The metadata directory MUST contain the files: (a) metadata/dataset.xml and (b) metadata/files.xml . The metadata directory MUST NOT contain any other files or directories. A DANS bag MAY contain a file original-filepaths.txt in the root of the bag in UTF-8 encoding. For the content requirements and purpose of this file, if it exists, see Section 3.3.","title":"2 Structural requirements"},{"location":"versions/1.3.0/#3-metadata-requirements","text":"","title":"3 Metadata requirements"},{"location":"versions/1.3.0/#31-metadatadatasetxml","text":"The file metadata/dataset.xml MUST adhere to DANS dataset metadata schema . The file metadata/dataset.xml MUST have at least one dcterms:license element as a child of the dcmiMetadata element. Exactly one of these elements MUST have the attribute xsi:type=\"dcterms:URI\" and have a URI as element text. (See also rule 4.2.) Any dcx-dai:<scheme> elements (i.e. (a) DAI, (b) ISNI or (c) ORCID) MUST contain an identifier that complies with the syntaxis for the selected identifier scheme URI. Any gml:posList elements nested in gml:Polygon elements: MUST have an even number of values. MUST have at least three different pairs of values, each of which describes one point. MUST start and end with the same pair of values. If a gml:MultiSurface is used, all nested gml:Polygon MUST have the same srsName attribute. Any gml:Point/gml:pos (pos nested in a Point), gml:lowerCorner and gml:upperCorner elements MUST have at least two values. These values MUST be numeric. In case the srsName specifies the RD scheme the values MUST be within the valid range. Any dc:identifier or dcterms:identifier element with attribute xsi:type=\"id-type:ARCHIS-ZAAK-IDENTIFICATIE MUST have a value of 10 or fewer characters. All URLs used in metadata/dataset.xml MUST be valid URLs with protocol http or https . The file metadata/dataset.xml MUST have one or more rights holders, each in a <dcterms:rightsHolder> element as a child of the dcmiMetadata element. dcx-dai:author and dcx-dai:organization elements MUST NOT have the role RightsHolder . The following elements, if present, MUST have exactly one of the attributes valueURI or valueCode (and MUST NOT have both). ddm:reportNumber ddm:acquisitionMethod ddm:subject ddm:temporal (a) For the schemeURI listed below, the value of a valueURI attribute MUST be a term URI that is part of the controlled vocabulary specified in the schemeURI attribute of the same element. This is validated against the version currently hosted by the DANS controlled vocabulary service . (b) If a valueCode attribute is used, it MUST correspond to a valid term in the controlled vocabulary. This rule applies to the following schemeURIs: https://data.cultureelerfgoed.nl/term/id/rn/a4a7933c-e096-4bcf-a921-4f70a78749fe (ABR) https://data.cultureelerfgoed.nl/term/id/abr/b6df7840-67bf-48bd-aa56-7ee39435d2ed (ABR) https://data.cultureelerfgoed.nl/term/id/abr/e9546020-4b28-4819-b0c2-29e7c864c5c0 (ABR Complextypen) https://data.cultureelerfgoed.nl/term/id/abr/22cbb070-6542-48f0-8afe-7d98d398cc0b (ABR Artefacten) https://data.cultureelerfgoed.nl/term/id/abr/9b688754-1315-484b-9c89-8817e87c1e84 (ABR Periodes) https://data.cultureelerfgoed.nl/term/id/abr/7a99aaba-c1e7-49a4-9dd8-d295dbcc870e (ABR Rapporttypes) https://data.cultureelerfgoed.nl/term/id/abr/554ca1ec-3ed8-42d3-ae4b-47bcb848b238 (ABR Verwervingswijzen) https://vocabularies.dans.knaw.nl/collections/ (DANS Collections) http://vocab.getty.edu/aat/ (Getty AAT)","title":"3.1 metadata/dataset.xml"},{"location":"versions/1.3.0/#32-metadatafilesxml","text":"The file metadata/files.xml MUST adhere to DANS bag file metadata schema . Each file element's filepath attribute MUST contain the bag local path to the payload file described. When an original-filepaths.txt exists, rule 3.3.1 applies. Directories and non-payload files MUST NOT be described by a file element. There MUST NOT be more than one file element corresponding to a payload file and every payload file MUST be described by a file element.","title":"3.2 metadata/files.xml"},{"location":"versions/1.3.0/#33-original-filepathstxt","text":"The purpose of original-filepaths.txt is to provide a complete mapping from renamed files back to their original full path (including filename). It MUST be a text file encoded with UTF-8. The lines of original-filepaths.txt MUST be formatted as <physical-bag-relative-path><whitespace><original-bag-relative-path> , where <physical-bag-relative-path> MUST NOT contain whitespace. <physical-bag-relative-path> MUST correspond one-to-one to an existing payload file. <original-bag-relative-path> MUST correspond one-to-one to a filepath attribute in the file elements in the files.xml .","title":"3.3 original-filepaths.txt"},{"location":"versions/1.3.0/#4-data-station-context-requirements","text":"If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the target Data Station with the following properties: (a) it has a dansSwordToken with the same value as Is-Version-Of (b) it has a dansOtherId with the same value as bag-info.txt 's Has-Organizational-Identifier (or both are absent). The metadata/dataset.xml element dcmiMetadata/dcterms:license with attribute xsi:type=\"dcterms:URI\" (see 3.1.2) must be one of the licenses supported by the target Data Station. The date in metadata/dataset.xml element profile/available MUST NOT be further in the future than the limit set on embargoes in the target Data Station. The bag MUST NOT contain a payload file data/original-metadata.zip .","title":"4 Data Station context requirements"},{"location":"versions/1.3.0/#5-vault-as-a-service-context-requirements","text":"If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the Vault that has a dansSwordToken with the same value as Is-Version-Of . (a) The file metadata/dataset.xml MAY contain at most one dcterms:identifier element with an attribute xsi:type=\"id-type:DOI\" . (b) If present, the text of this element MUST be a syntactically valid DOI identifier which SHOULD be resolvable.","title":"5 Vault as a Service context requirements"},{"location":"versions/1.3.0/#references","text":"BagIt - packaging format on which the DANS Data Station ingest process is based DANS bag file metadata schema - schema for content file specific metadata DANS dataset metadata schema - schema for dataset level metadata DANS controlled list of dcterms:identifier types - list of valid values for xsi:id-type DANS DCTERMS extension: Digital Author Identifier - extensions to accommodate Digital Author Identifiers DANS DCTERMS extension: Geography Markup Language - extensions to accommodate Geography Markup Language DC - Dublin Core metadata elements DCTERMS - metadata schema from which elements are used in several DANS metadata schemas DOI - Digital Object Identifier GML 3.1.1 Simplified Features profile Levels 0 and 1 - Profile of Geography Mark-up Language ISO 8601 - standard for formatting dates and times Media Type - identifiers for file formats OAIS Reference Model - reference model for long term preservation archives RFC 2119 - specification for use of requirement level keywords RD - Stelsel van de Rijksdriehoeksmeting , a scheme for geographical locations urn:uuid - URN scheme for UUID s urn:NBN - URN scheme for National Bibliographic Numbers UUID - universally unique identifiers XML Schema - constraint language for specifying types of XML documents","title":"References"},{"location":"versions/archived/1.0.0-migration-supplement/","text":"DANS BagIt Profile v1.0.0 - Migration Supplement \u00b6 Introduction \u00b6 Version \u00b6 See DANS BagIt Profile v1 Status \u00b6 INTERNAL Scope \u00b6 This document supplements DANS BagIt Profile v1 by modifying its rules for bags used to migrate datasets from EASY to a Data Station. Clients of the Data Station SWORD2 service can ignore this document. Overview and conventions \u00b6 XML namespaces \u00b6 Extra namespaces used: Prefix Namespace URI Namespace documentation am http://easy.dans.knaw.nl/schemas/bag/metadata/agreements/ DANS deposit agreement metadata amd http://easy.dans.knaw.nl/easy/dataset-administrative-metadata/ DANS administrative metadata emd http://easy.dans.knaw.nl/easy/easymetadata/ DANS EASY metadata schema prov http://easy.dans.knaw.nl/schemas/bag/metadata/prov/ DANS provenance metadata schema Requirements \u00b6 2 Structural requirements \u00b6 2.2-MIGRATION : Additionally, the metadata directory MAY contain the files metadata/amd.xml , metadata/emd.xml , metadata/provenance.xml , metadata/depositor-info/agreements.xml , metadata/depositor-info/depositor-agreement.pdf , metadata/depositor-info/depositor-agreement.txt , metadata/depositor-info/message-from-depositor.txt , metadata/license.html , metadata/license.txt , metadata/license.pdf , metadata/original/dataset.xml , metadata/original/files.xml . 3 Metadata requirements \u00b6 3.1 metadata/dataset.xml \u00b6 3.1.9-MIGRATION : Alternatively, dcmiMetadata/dcx-dai:contributorDetails/dcx-dai:author and dcmiMetadata/dcx-dai:contributorDetails/dcx-dai:organization elements MAY specify the rights holder using the role RightsHolder . 3.1.11 : Rule does not apply to migration. 3.4 Migration-only metadata \u00b6 3.4.1-MIGRATION : The file metadata/depositor-info/agreements.xml MUST adhere to DANS deposit agreement metadata . 3.4.2-MIGRATION : The file metadata/amd.xml is REQUIRED and MUST adhere to DANS administrative metadata . 3.4.3-MIGRATION : The file metadata/emd.xml is optional. If it is present it MUST adhere to DANS EASY metadata schema . 3.4.4-MIGRATION : The file metadata/provenance.xml is optional. If it is present it MUST adhere to DANS provenance metadata schema . Section 4 Data Station context requirements \u00b6 Rules do not apply to migration. References \u00b6 Extra references: DANS administrative metadata - schema for administrative metadata DANS EASY metadata schema - legacy schema for dataset level metadata DANS provenance metadata schema - metadata schema for recording provenance of datasets migrated from DANS EASY DANS deposit agreement metadata - schema for metadata about the agreement between DANS and the depositor","title":"v1.0.0-Migration-supplement"},{"location":"versions/archived/1.0.0-migration-supplement/#dans-bagit-profile-v100-migration-supplement","text":"","title":"DANS BagIt Profile v1.0.0 - Migration Supplement"},{"location":"versions/archived/1.0.0-migration-supplement/#introduction","text":"","title":"Introduction"},{"location":"versions/archived/1.0.0-migration-supplement/#version","text":"See DANS BagIt Profile v1","title":"Version"},{"location":"versions/archived/1.0.0-migration-supplement/#status","text":"INTERNAL","title":"Status"},{"location":"versions/archived/1.0.0-migration-supplement/#scope","text":"This document supplements DANS BagIt Profile v1 by modifying its rules for bags used to migrate datasets from EASY to a Data Station. Clients of the Data Station SWORD2 service can ignore this document.","title":"Scope"},{"location":"versions/archived/1.0.0-migration-supplement/#overview-and-conventions","text":"","title":"Overview and conventions"},{"location":"versions/archived/1.0.0-migration-supplement/#xml-namespaces","text":"Extra namespaces used: Prefix Namespace URI Namespace documentation am http://easy.dans.knaw.nl/schemas/bag/metadata/agreements/ DANS deposit agreement metadata amd http://easy.dans.knaw.nl/easy/dataset-administrative-metadata/ DANS administrative metadata emd http://easy.dans.knaw.nl/easy/easymetadata/ DANS EASY metadata schema prov http://easy.dans.knaw.nl/schemas/bag/metadata/prov/ DANS provenance metadata schema","title":"XML namespaces"},{"location":"versions/archived/1.0.0-migration-supplement/#requirements","text":"","title":"Requirements"},{"location":"versions/archived/1.0.0-migration-supplement/#2-structural-requirements","text":"2.2-MIGRATION : Additionally, the metadata directory MAY contain the files metadata/amd.xml , metadata/emd.xml , metadata/provenance.xml , metadata/depositor-info/agreements.xml , metadata/depositor-info/depositor-agreement.pdf , metadata/depositor-info/depositor-agreement.txt , metadata/depositor-info/message-from-depositor.txt , metadata/license.html , metadata/license.txt , metadata/license.pdf , metadata/original/dataset.xml , metadata/original/files.xml .","title":"2 Structural requirements"},{"location":"versions/archived/1.0.0-migration-supplement/#3-metadata-requirements","text":"","title":"3 Metadata requirements"},{"location":"versions/archived/1.0.0-migration-supplement/#31-metadatadatasetxml","text":"3.1.9-MIGRATION : Alternatively, dcmiMetadata/dcx-dai:contributorDetails/dcx-dai:author and dcmiMetadata/dcx-dai:contributorDetails/dcx-dai:organization elements MAY specify the rights holder using the role RightsHolder . 3.1.11 : Rule does not apply to migration.","title":"3.1 metadata/dataset.xml"},{"location":"versions/archived/1.0.0-migration-supplement/#34-migration-only-metadata","text":"3.4.1-MIGRATION : The file metadata/depositor-info/agreements.xml MUST adhere to DANS deposit agreement metadata . 3.4.2-MIGRATION : The file metadata/amd.xml is REQUIRED and MUST adhere to DANS administrative metadata . 3.4.3-MIGRATION : The file metadata/emd.xml is optional. If it is present it MUST adhere to DANS EASY metadata schema . 3.4.4-MIGRATION : The file metadata/provenance.xml is optional. If it is present it MUST adhere to DANS provenance metadata schema .","title":"3.4 Migration-only metadata"},{"location":"versions/archived/1.0.0-migration-supplement/#section-4-data-station-context-requirements","text":"Rules do not apply to migration.","title":"Section 4 Data Station context requirements"},{"location":"versions/archived/1.0.0-migration-supplement/#references","text":"Extra references: DANS administrative metadata - schema for administrative metadata DANS EASY metadata schema - legacy schema for dataset level metadata DANS provenance metadata schema - metadata schema for recording provenance of datasets migrated from DANS EASY DANS deposit agreement metadata - schema for metadata about the agreement between DANS and the depositor","title":"References"},{"location":"versions/archived/1.0.0/","text":"DANS BagIt Profile v1.0.0 \u00b6 Introduction \u00b6 Version \u00b6 Document version: 1.0.0 Publication date: 2024-02-06 Status \u00b6 ARCHIVED THIS VERSION OF THE PROFILE IS NO LONGER IN USE. Scope \u00b6 This document specifies what constitutes an acceptable DANS bag. This includes all the requirements for a bag to be successfully processed by the ingest workflow. Version 1.0.0 covers the requirements used by the DANS Data Stations and the Vault as a Service. (DANS internal note: DANS BagIt Profile is also being used in the migration from EASY to the Data Stations. Some rules are modified for migration deposits. See Migration Supplement .) Overview and conventions \u00b6 Keywords \u00b6 The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \" OPTIONAL\" in this document are to be interpreted as described in RFC 2119 . The keyword \"SHOULD\" is also used to specify requirements that are impossible or impractical to check by the archival organization (i.e. DANS). The client should do its best to meet these requirements, but not rely on their being validated by the archival organization. Subdivisions \u00b6 The requirements are subdivided into the following sections: BagIt-related requirements - requirements that refer back to the BagIt specifications Structural requirements - requirements regarding the directories and files in the bag Metadata requirements - requirements regarding the metadata files included in the bag Data Station context requirements - requirements regarding the Data Station where the dataset is to be created or modified; these do not apply to the Vault as a Service Vault as a Service context requirements - requirements that are only applicable to the Vault as a Service and not to the Data Stations The sections are numbered and may have numbered subsections. The requirements themselves are stated as numbered rules. Rules may have parts that are labeled with letters: (a), (b), (c), etc. To uniquely identify a specific rule, use the notation <section-nr>[.<subsection-nr>].<rule-nr> [(<letter>)] Example: 2.3.4 (e) means part e of the fourth rule in subsection 3 of section 2. XML namespaces \u00b6 When referring to XML element or attribute names or attribute values that have a prefix (such as dcterms:identifier ) an element in a certain namespace is intended. The table below lists the mapping from prefix to namespace. In the actual document, the namespace may be bound to a different prefix, or be the default namespace. Prefix Namespace URI Namespace documentation dc http://purl.org/dc/elements/1.1/ DC dcterms http://purl.org/dc/terms/ DCTERMS dcx-dai http://easy.dans.knaw.nl/schemas/dcx/dai/ DANS DCTERMS extension: Digital Author Identifier dcx-gml http://easy.dans.knaw.nl/schemas/dcx/gml/ DANS DCTERMS extension: Geography Markup Language ddm http://schemas.dans.knaw.nl/dataset/ddm-v2/ DANS dataset metadata schema files http://easy.dans.knaw.nl/schemas/bag/metadata/files/ DANS bag file metadata schema gml http://www.opengis.net/gml GML 3.1.1 Simplified Features profile Levels 0 and 1 id-type http://easy.dans.knaw.nl/schemas/vocab/identifier-type/ DANS controlled list of dcterms:identifier types xsi http://www.w3.org/2001/XMLSchema-instance XML Schema Names \u00b6 Exact names are specified in code style. The capitalization of those names must be exactly as specified, unless it is explicitly stated that the name is case-insensitive. If the name is a file path it is relative to the bag base directory. Glossary \u00b6 This section defines a number of terms that may be useful when discussing this specification. Several of these terms are used in the Requirements section of this document. Where terms are used in the definitions of other terms, they are printed in italics . bag : a data package conforming to the BagIt specifications. bag-ID : a urn:uuid given to every deposit upon delivery to DANS. The bag-ID of the first version of a dataset is also known as the sword token . (version N) DANS-bag : a bag that also conforms to (version N) of the DANS BagIt Profile specifications. DANS Data Station : the publishing and archiving service of DANS for datasets Vault as a Service : the service that allows customers to store datasets in the DANS Data Vault, without publishing them in a Data Station DANS SWORD Service : the DANS implementation of the SWORDv2 protocol dataset : an information package containing data and metadata published in a DANS Data Station . A dataset may have multiple versions. deposit : a package containing data and metadata sent to DANS by the depositor to create a new dataset or dataset version. depositor : the agent sending data to DANS for publishing in a DANS Data Station . This term corresponds to the Producer in the OAIS Reference Model . deaccessioned version : a dataset that is present in a DANS Data Station , but no longer disseminated. To the external user the dataset version appears to be deleted, only a tombstone remains. update-deposit : a deposit that is intended to create a new version of an existing dataset . version-bag-ID : a bag-ID that references a version of a dataset . If the dataset consists of several versions , the DOI resolves to the most recent of those version s. All versions of one dataset have the same sword token . sword token : a urn:uuid assigned to first version bags upon submission through the DANS SWORD Service . This UUID is used when depositing an update-deposit and to identify all versions of one dataset. Requirements \u00b6 1 BagIt related \u00b6 1.1 Validity \u00b6 The bag MUST be valid according to the BagIt specifications v1.0 (RFC 8493). 1.2 bag-info.txt \u00b6 The bag MUST contain a bag-info.txt file. (a) The bag-info.txt file MUST contain exactly one element called Created . (b) It MUST have a timestamp value in ISO 8601 format, including the time zone and a millisecond precision time part. (c) The values in the Created timestamps SHOULD reflect the correct order of the versions. (a) The bag-info.txt file MAY contain at most one element called Is-Version-Of (b) with a urn:uuid -value. See rules 4.1 and 5.1 for the context requirements if Is-Version-Of is provided. (a) The bag-info.txt file MAY contain at most one element called Has-Organizational-Identifier . (b) If this Has-Organizational-Identifier is given, at most one Has-Organizational-Identifier-Version MAY be present, containing a version number. (c) If Has-Organizational-Identifier is present then its value MUST start with one of the approved prefixes. Each client will be assigned a unique prefix to use for this purpose. 1.3 Manifests \u00b6 If the bag has only one payload manifest it MUST NOT use the MD5 algorithm. However, it MAY have an MD5 payload manifest in addition to other payload manifests. 2 Structural requirements \u00b6 The bag MUST have a tag-directory called metadata directly under the bag base directory. The metadata directory MUST contain the files: (a) metadata/dataset.xml and (b) metadata/files.xml . The metadata directory MUST NOT contain any other files or directories. A DANS bag MAY contain a file original-filepaths.txt in the root of the bag in UTF-8 encoding. For the content requirements and purpose of this file, if it exists, see Section 3.3. 3 Metadata requirements \u00b6 3.1 metadata/dataset.xml \u00b6 The file metadata/dataset.xml MUST adhere to DANS dataset metadata schema . The file metadata/dataset.xml MUST have at least one dcterms:license element as a child of the dcmiMetadata element. Exactly one of these elements MUST have the attribute xsi:type=\"dcterms:URI\" and have a URI as element text. (See also rule 4.2.) Any dcx-dai:<scheme> elements (i.e. (a) DAI, (b) ISNI or (c) ORCID) MUST contain an identifier that complies with the syntaxis for the selected identifier scheme URI. Any gml:posList elements nested in gml:Polygon elements: MUST have an even number of values. MUST have at least three different pairs of values, each of which describes one point. MUST start and end with the same pair of values. If a gml:MultiSurface is used, all nested gml:Polygon MUST have the same srsName attribute. Any gml:Point/gml:pos (pos nested in a Point), gml:lowerCorner and gml:upperCorner elements MUST have at least two values. These values MUST be numeric. In case the srsName specifies the RD scheme the values MUST be within the valid range. Any dc:identifier or dcterms:identifier element with attribute xsi:type=\"id-type:ARCHIS-ZAAK-IDENTIFICATIE MUST have a value of 10 or fewer characters. All URLs used in metadata/dataset.xml MUST be valid URLs with protocol http or https . The file metadata/dataset.xml MUST have one or more rights holders, each in a <dcterms:rightsHolder> element as a child of the dcmiMetadata element. dcx-dai:author and dcx-dai:organization elements MUST NOT have the role RightsHolder . 3.2 metadata/files.xml \u00b6 The file metadata/files.xml MUST adhere to DANS bag file metadata schema . Each file element's filepath attribute MUST contain the bag local path to the payload file described. When an original-filepaths.txt exists, rule 3.3.1 applies. Directories and non-payload files MUST NOT be described by a file element. There MUST NOT be more than one file element corresponding to a payload file and every payload file MUST be described by a file element. 3.3 original-filepaths.txt \u00b6 The purpose of original-filepaths.txt is to provide a complete mapping from renamed files back to their original full path (including filename). It MUST be a text file encoded with UTF-8. The lines of original-filepaths.txt MUST be formatted as <physical-bag-relative-path><whitespace><original-bag-relative-path> , where <physical-bag-relative-path> MUST NOT contain whitespace. <physical-bag-relative-path> MUST correspond one-to-one to an existing payload file. <original-bag-relative-path> MUST correspond one-to-one to a filepath attribute in the file elements in the files.xml . 4 Data Station context requirements \u00b6 If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the target Data Station with the following properties: (a) it has a dansSwordToken with the same value as Is-Version-Of (b) it has a dansOtherId with the same value as bag-info.txt 's Has-Organizational-Identifier (or both are absent). The metadata/dataset.xml element dcmiMetadata/dcterms:license with attribute xsi:type=\"dcterms:URI\" (see 3.1.2) must be one of the licenses supported by the target Data Station. The date in metadata/dataset.xml element profile/available MUST NOT be further in the future than the limit set on embargoes in the target Data Station. The bag MUST NOT contain a payload file data/original-metadata.zip . 5 Vault as a Service context requirements \u00b6 If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the Vault that has a dansSwordToken with the same value as Is-Version-Of . (a) The file metadata/dataset.xml MAY contain at most one dcterms:identifier element with an attribute xsi:type=\"id-type:DOI\" . (b) If present, the text of this element MUST be a syntactically valid DOI identifier which SHOULD be resolvable. References \u00b6 BagIt - packaging format on which the DANS Data Station ingest process is based DANS bag file metadata schema - schema for content file specific metadata DANS dataset metadata schema - schema for dataset level metadata DANS controlled list of dcterms:identifier types - list of valid values for xsi:id-type DANS DCTERMS extension: Digital Author Identifier - extensions to accommodate Digital Author Identifiers DANS DCTERMS extension: Geography Markup Language - extensions to accommodate Geography Markup Language DC - Dublin Core metadata elements DCTERMS - metadata schema from which elements are used in several DANS metadata schemas DOI - Digital Object Identifier GML 3.1.1 Simplified Features profile Levels 0 and 1 - Profile of Geography Mark-up Language ISO 8601 - standard for formatting dates and times Media Type - identifiers for file formats OAIS Reference Model - reference model for long term preservation archives RFC 2119 - specification for use of requirement level keywords RD - Stelsel van de Rijksdriehoeksmeting , a scheme for geographical locations urn:uuid - URN scheme for UUID s urn:NBN - URN scheme for National Bibliographic Numbers UUID - universally unique identifiers XML Schema - constraint language for specifying types of XML documents","title":"v1.0.0"},{"location":"versions/archived/1.0.0/#dans-bagit-profile-v100","text":"","title":"DANS BagIt Profile v1.0.0"},{"location":"versions/archived/1.0.0/#introduction","text":"","title":"Introduction"},{"location":"versions/archived/1.0.0/#version","text":"Document version: 1.0.0 Publication date: 2024-02-06","title":"Version"},{"location":"versions/archived/1.0.0/#status","text":"ARCHIVED THIS VERSION OF THE PROFILE IS NO LONGER IN USE.","title":"Status"},{"location":"versions/archived/1.0.0/#scope","text":"This document specifies what constitutes an acceptable DANS bag. This includes all the requirements for a bag to be successfully processed by the ingest workflow. Version 1.0.0 covers the requirements used by the DANS Data Stations and the Vault as a Service. (DANS internal note: DANS BagIt Profile is also being used in the migration from EASY to the Data Stations. Some rules are modified for migration deposits. See Migration Supplement .)","title":"Scope"},{"location":"versions/archived/1.0.0/#overview-and-conventions","text":"","title":"Overview and conventions"},{"location":"versions/archived/1.0.0/#keywords","text":"The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \" OPTIONAL\" in this document are to be interpreted as described in RFC 2119 . The keyword \"SHOULD\" is also used to specify requirements that are impossible or impractical to check by the archival organization (i.e. DANS). The client should do its best to meet these requirements, but not rely on their being validated by the archival organization.","title":"Keywords"},{"location":"versions/archived/1.0.0/#subdivisions","text":"The requirements are subdivided into the following sections: BagIt-related requirements - requirements that refer back to the BagIt specifications Structural requirements - requirements regarding the directories and files in the bag Metadata requirements - requirements regarding the metadata files included in the bag Data Station context requirements - requirements regarding the Data Station where the dataset is to be created or modified; these do not apply to the Vault as a Service Vault as a Service context requirements - requirements that are only applicable to the Vault as a Service and not to the Data Stations The sections are numbered and may have numbered subsections. The requirements themselves are stated as numbered rules. Rules may have parts that are labeled with letters: (a), (b), (c), etc. To uniquely identify a specific rule, use the notation <section-nr>[.<subsection-nr>].<rule-nr> [(<letter>)] Example: 2.3.4 (e) means part e of the fourth rule in subsection 3 of section 2.","title":"Subdivisions"},{"location":"versions/archived/1.0.0/#xml-namespaces","text":"When referring to XML element or attribute names or attribute values that have a prefix (such as dcterms:identifier ) an element in a certain namespace is intended. The table below lists the mapping from prefix to namespace. In the actual document, the namespace may be bound to a different prefix, or be the default namespace. Prefix Namespace URI Namespace documentation dc http://purl.org/dc/elements/1.1/ DC dcterms http://purl.org/dc/terms/ DCTERMS dcx-dai http://easy.dans.knaw.nl/schemas/dcx/dai/ DANS DCTERMS extension: Digital Author Identifier dcx-gml http://easy.dans.knaw.nl/schemas/dcx/gml/ DANS DCTERMS extension: Geography Markup Language ddm http://schemas.dans.knaw.nl/dataset/ddm-v2/ DANS dataset metadata schema files http://easy.dans.knaw.nl/schemas/bag/metadata/files/ DANS bag file metadata schema gml http://www.opengis.net/gml GML 3.1.1 Simplified Features profile Levels 0 and 1 id-type http://easy.dans.knaw.nl/schemas/vocab/identifier-type/ DANS controlled list of dcterms:identifier types xsi http://www.w3.org/2001/XMLSchema-instance XML Schema","title":"XML namespaces"},{"location":"versions/archived/1.0.0/#names","text":"Exact names are specified in code style. The capitalization of those names must be exactly as specified, unless it is explicitly stated that the name is case-insensitive. If the name is a file path it is relative to the bag base directory.","title":"Names"},{"location":"versions/archived/1.0.0/#glossary","text":"This section defines a number of terms that may be useful when discussing this specification. Several of these terms are used in the Requirements section of this document. Where terms are used in the definitions of other terms, they are printed in italics . bag : a data package conforming to the BagIt specifications. bag-ID : a urn:uuid given to every deposit upon delivery to DANS. The bag-ID of the first version of a dataset is also known as the sword token . (version N) DANS-bag : a bag that also conforms to (version N) of the DANS BagIt Profile specifications. DANS Data Station : the publishing and archiving service of DANS for datasets Vault as a Service : the service that allows customers to store datasets in the DANS Data Vault, without publishing them in a Data Station DANS SWORD Service : the DANS implementation of the SWORDv2 protocol dataset : an information package containing data and metadata published in a DANS Data Station . A dataset may have multiple versions. deposit : a package containing data and metadata sent to DANS by the depositor to create a new dataset or dataset version. depositor : the agent sending data to DANS for publishing in a DANS Data Station . This term corresponds to the Producer in the OAIS Reference Model . deaccessioned version : a dataset that is present in a DANS Data Station , but no longer disseminated. To the external user the dataset version appears to be deleted, only a tombstone remains. update-deposit : a deposit that is intended to create a new version of an existing dataset . version-bag-ID : a bag-ID that references a version of a dataset . If the dataset consists of several versions , the DOI resolves to the most recent of those version s. All versions of one dataset have the same sword token . sword token : a urn:uuid assigned to first version bags upon submission through the DANS SWORD Service . This UUID is used when depositing an update-deposit and to identify all versions of one dataset.","title":"Glossary"},{"location":"versions/archived/1.0.0/#requirements","text":"","title":"Requirements"},{"location":"versions/archived/1.0.0/#1-bagit-related","text":"","title":"1 BagIt related"},{"location":"versions/archived/1.0.0/#11-validity","text":"The bag MUST be valid according to the BagIt specifications v1.0 (RFC 8493).","title":"1.1 Validity"},{"location":"versions/archived/1.0.0/#12-bag-infotxt","text":"The bag MUST contain a bag-info.txt file. (a) The bag-info.txt file MUST contain exactly one element called Created . (b) It MUST have a timestamp value in ISO 8601 format, including the time zone and a millisecond precision time part. (c) The values in the Created timestamps SHOULD reflect the correct order of the versions. (a) The bag-info.txt file MAY contain at most one element called Is-Version-Of (b) with a urn:uuid -value. See rules 4.1 and 5.1 for the context requirements if Is-Version-Of is provided. (a) The bag-info.txt file MAY contain at most one element called Has-Organizational-Identifier . (b) If this Has-Organizational-Identifier is given, at most one Has-Organizational-Identifier-Version MAY be present, containing a version number. (c) If Has-Organizational-Identifier is present then its value MUST start with one of the approved prefixes. Each client will be assigned a unique prefix to use for this purpose.","title":"1.2 bag-info.txt"},{"location":"versions/archived/1.0.0/#13-manifests","text":"If the bag has only one payload manifest it MUST NOT use the MD5 algorithm. However, it MAY have an MD5 payload manifest in addition to other payload manifests.","title":"1.3 Manifests"},{"location":"versions/archived/1.0.0/#2-structural-requirements","text":"The bag MUST have a tag-directory called metadata directly under the bag base directory. The metadata directory MUST contain the files: (a) metadata/dataset.xml and (b) metadata/files.xml . The metadata directory MUST NOT contain any other files or directories. A DANS bag MAY contain a file original-filepaths.txt in the root of the bag in UTF-8 encoding. For the content requirements and purpose of this file, if it exists, see Section 3.3.","title":"2 Structural requirements"},{"location":"versions/archived/1.0.0/#3-metadata-requirements","text":"","title":"3 Metadata requirements"},{"location":"versions/archived/1.0.0/#31-metadatadatasetxml","text":"The file metadata/dataset.xml MUST adhere to DANS dataset metadata schema . The file metadata/dataset.xml MUST have at least one dcterms:license element as a child of the dcmiMetadata element. Exactly one of these elements MUST have the attribute xsi:type=\"dcterms:URI\" and have a URI as element text. (See also rule 4.2.) Any dcx-dai:<scheme> elements (i.e. (a) DAI, (b) ISNI or (c) ORCID) MUST contain an identifier that complies with the syntaxis for the selected identifier scheme URI. Any gml:posList elements nested in gml:Polygon elements: MUST have an even number of values. MUST have at least three different pairs of values, each of which describes one point. MUST start and end with the same pair of values. If a gml:MultiSurface is used, all nested gml:Polygon MUST have the same srsName attribute. Any gml:Point/gml:pos (pos nested in a Point), gml:lowerCorner and gml:upperCorner elements MUST have at least two values. These values MUST be numeric. In case the srsName specifies the RD scheme the values MUST be within the valid range. Any dc:identifier or dcterms:identifier element with attribute xsi:type=\"id-type:ARCHIS-ZAAK-IDENTIFICATIE MUST have a value of 10 or fewer characters. All URLs used in metadata/dataset.xml MUST be valid URLs with protocol http or https . The file metadata/dataset.xml MUST have one or more rights holders, each in a <dcterms:rightsHolder> element as a child of the dcmiMetadata element. dcx-dai:author and dcx-dai:organization elements MUST NOT have the role RightsHolder .","title":"3.1 metadata/dataset.xml"},{"location":"versions/archived/1.0.0/#32-metadatafilesxml","text":"The file metadata/files.xml MUST adhere to DANS bag file metadata schema . Each file element's filepath attribute MUST contain the bag local path to the payload file described. When an original-filepaths.txt exists, rule 3.3.1 applies. Directories and non-payload files MUST NOT be described by a file element. There MUST NOT be more than one file element corresponding to a payload file and every payload file MUST be described by a file element.","title":"3.2 metadata/files.xml"},{"location":"versions/archived/1.0.0/#33-original-filepathstxt","text":"The purpose of original-filepaths.txt is to provide a complete mapping from renamed files back to their original full path (including filename). It MUST be a text file encoded with UTF-8. The lines of original-filepaths.txt MUST be formatted as <physical-bag-relative-path><whitespace><original-bag-relative-path> , where <physical-bag-relative-path> MUST NOT contain whitespace. <physical-bag-relative-path> MUST correspond one-to-one to an existing payload file. <original-bag-relative-path> MUST correspond one-to-one to a filepath attribute in the file elements in the files.xml .","title":"3.3 original-filepaths.txt"},{"location":"versions/archived/1.0.0/#4-data-station-context-requirements","text":"If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the target Data Station with the following properties: (a) it has a dansSwordToken with the same value as Is-Version-Of (b) it has a dansOtherId with the same value as bag-info.txt 's Has-Organizational-Identifier (or both are absent). The metadata/dataset.xml element dcmiMetadata/dcterms:license with attribute xsi:type=\"dcterms:URI\" (see 3.1.2) must be one of the licenses supported by the target Data Station. The date in metadata/dataset.xml element profile/available MUST NOT be further in the future than the limit set on embargoes in the target Data Station. The bag MUST NOT contain a payload file data/original-metadata.zip .","title":"4 Data Station context requirements"},{"location":"versions/archived/1.0.0/#5-vault-as-a-service-context-requirements","text":"If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the Vault that has a dansSwordToken with the same value as Is-Version-Of . (a) The file metadata/dataset.xml MAY contain at most one dcterms:identifier element with an attribute xsi:type=\"id-type:DOI\" . (b) If present, the text of this element MUST be a syntactically valid DOI identifier which SHOULD be resolvable.","title":"5 Vault as a Service context requirements"},{"location":"versions/archived/1.0.0/#references","text":"BagIt - packaging format on which the DANS Data Station ingest process is based DANS bag file metadata schema - schema for content file specific metadata DANS dataset metadata schema - schema for dataset level metadata DANS controlled list of dcterms:identifier types - list of valid values for xsi:id-type DANS DCTERMS extension: Digital Author Identifier - extensions to accommodate Digital Author Identifiers DANS DCTERMS extension: Geography Markup Language - extensions to accommodate Geography Markup Language DC - Dublin Core metadata elements DCTERMS - metadata schema from which elements are used in several DANS metadata schemas DOI - Digital Object Identifier GML 3.1.1 Simplified Features profile Levels 0 and 1 - Profile of Geography Mark-up Language ISO 8601 - standard for formatting dates and times Media Type - identifiers for file formats OAIS Reference Model - reference model for long term preservation archives RFC 2119 - specification for use of requirement level keywords RD - Stelsel van de Rijksdriehoeksmeting , a scheme for geographical locations urn:uuid - URN scheme for UUID s urn:NBN - URN scheme for National Bibliographic Numbers UUID - universally unique identifiers XML Schema - constraint language for specifying types of XML documents","title":"References"},{"location":"versions/archived/1.1.0/","text":"DANS BagIt Profile v1.1.0 \u00b6 Introduction \u00b6 Version \u00b6 Document version: 1.1.0 Publication date: 2024-04-08 Status \u00b6 ARCHIVED THIS VERSION OF THE PROFILE IS NO LONGER IN USE. Changes \u00b6 Changed from version 1.0.0 to 1.1.0 \u00b6 Rule 1.2.2 changed to no longer require the Created element in bag-info.txt , but still allow it for backwards compatibility. Scope \u00b6 This document specifies what constitutes an acceptable DANS bag. This includes all the requirements for a bag to be successfully processed by the ingest workflow. Version 1.0.0 covers the requirements used by the DANS Data Stations and the Vault as a Service. (DANS internal note: DANS BagIt Profile is also being used in the migration from EASY to the Data Stations. Some rules are modified for migration deposits. See Migration Supplement .) Overview and conventions \u00b6 Keywords \u00b6 The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \" OPTIONAL\" in this document are to be interpreted as described in RFC 2119 . The keyword \"SHOULD\" is also used to specify requirements that are impossible or impractical to check by the archival organization (i.e. DANS). The client should do its best to meet these requirements, but not rely on their being validated by the archival organization. Subdivisions \u00b6 The requirements are subdivided into the following sections: BagIt-related requirements - requirements that refer back to the BagIt specifications Structural requirements - requirements regarding the directories and files in the bag Metadata requirements - requirements regarding the metadata files included in the bag Data Station context requirements - requirements regarding the Data Station where the dataset is to be created or modified; these do not apply to the Vault as a Service Vault as a Service context requirements - requirements that are only applicable to the Vault as a Service and not to the Data Stations The sections are numbered and may have numbered subsections. The requirements themselves are stated as numbered rules. Rules may have parts that are labeled with letters: (a), (b), (c), etc. To uniquely identify a specific rule, use the notation <section-nr>[.<subsection-nr>].<rule-nr> [(<letter>)] Example: 2.3.4 (e) means part e of the fourth rule in subsection 3 of section 2. XML namespaces \u00b6 When referring to XML element or attribute names or attribute values that have a prefix (such as dcterms:identifier ) an element in a certain namespace is intended. The table below lists the mapping from prefix to namespace. In the actual document, the namespace may be bound to a different prefix, or be the default namespace. Prefix Namespace URI Namespace documentation dc http://purl.org/dc/elements/1.1/ DC dcterms http://purl.org/dc/terms/ DCTERMS dcx-dai http://easy.dans.knaw.nl/schemas/dcx/dai/ DANS DCTERMS extension: Digital Author Identifier dcx-gml http://easy.dans.knaw.nl/schemas/dcx/gml/ DANS DCTERMS extension: Geography Markup Language ddm http://schemas.dans.knaw.nl/dataset/ddm-v2/ DANS dataset metadata schema files http://easy.dans.knaw.nl/schemas/bag/metadata/files/ DANS bag file metadata schema gml http://www.opengis.net/gml GML 3.1.1 Simplified Features profile Levels 0 and 1 id-type http://easy.dans.knaw.nl/schemas/vocab/identifier-type/ DANS controlled list of dcterms:identifier types xsi http://www.w3.org/2001/XMLSchema-instance XML Schema Names \u00b6 Exact names are specified in code style. The capitalization of those names must be exactly as specified, unless it is explicitly stated that the name is case-insensitive. If the name is a file path it is relative to the bag base directory. Glossary \u00b6 This section defines a number of terms that may be useful when discussing this specification. Several of these terms are used in the Requirements section of this document. Where terms are used in the definitions of other terms, they are printed in italics . bag : a data package conforming to the BagIt specifications. bag-ID : a urn:uuid given to every deposit upon delivery to DANS. The bag-ID of the first version of a dataset is also known as the sword token . (version N) DANS-bag : a bag that also conforms to (version N) of the DANS BagIt Profile specifications. DANS Data Station : the publishing and archiving service of DANS for datasets Vault as a Service : the service that allows customers to store datasets in the DANS Data Vault, without publishing them in a Data Station DANS SWORD Service : the DANS implementation of the SWORDv2 protocol dataset : an information package containing data and metadata published in a DANS Data Station . A dataset may have multiple versions. deposit : a package containing data and metadata sent to DANS by the depositor to create a new dataset or dataset version. depositor : the agent sending data to DANS for publishing in a DANS Data Station . This term corresponds to the Producer in the OAIS Reference Model . deaccessioned version : a dataset that is present in a DANS Data Station , but no longer disseminated. To the external user the dataset version appears to be deleted, only a tombstone remains. update-deposit : a deposit that is intended to create a new version of an existing dataset . version-bag-ID : a bag-ID that references a version of a dataset . If the dataset consists of several versions , the DOI resolves to the most recent of those version s. All versions of one dataset have the same sword token . sword token : a urn:uuid assigned to first version bags upon submission through the DANS SWORD Service . This UUID is used when depositing an update-deposit and to identify all versions of one dataset. Requirements \u00b6 1 BagIt related \u00b6 1.1 Validity \u00b6 The bag MUST be valid according to the BagIt specifications v1.0 (RFC 8493). 1.2 bag-info.txt \u00b6 The bag MUST contain a bag-info.txt file. The bag-info.txt file MAY contain one or more elements called Created . This element, when present, is ignored. The only reason to allow it is for backwards compatibility with v1.0.0 of the DANS BagIt Profile. (a) The bag-info.txt file MAY contain at most one element called Is-Version-Of (b) with a urn:uuid -value. See rules 4.1 and 5.1 for the context requirements if Is-Version-Of is provided. (a) The bag-info.txt file MAY contain at most one element called Has-Organizational-Identifier . (b) If this Has-Organizational-Identifier is given, at most one Has-Organizational-Identifier-Version MAY be present, containing a version number. (c) If Has-Organizational-Identifier is present then its value MUST start with one of the approved prefixes. Each client will be assigned a unique prefix to use for this purpose. 1.3 Manifests \u00b6 If the bag has only one payload manifest it MUST NOT use the MD5 algorithm. However, it MAY have an MD5 payload manifest in addition to other payload manifests. 2 Structural requirements \u00b6 The bag MUST have a tag-directory called metadata directly under the bag base directory. The metadata directory MUST contain the files: (a) metadata/dataset.xml and (b) metadata/files.xml . The metadata directory MUST NOT contain any other files or directories. A DANS bag MAY contain a file original-filepaths.txt in the root of the bag in UTF-8 encoding. For the content requirements and purpose of this file, if it exists, see Section 3.3. 3 Metadata requirements \u00b6 3.1 metadata/dataset.xml \u00b6 The file metadata/dataset.xml MUST adhere to DANS dataset metadata schema . The file metadata/dataset.xml MUST have at least one dcterms:license element as a child of the dcmiMetadata element. Exactly one of these elements MUST have the attribute xsi:type=\"dcterms:URI\" and have a URI as element text. (See also rule 4.2.) Any dcx-dai:<scheme> elements (i.e. (a) DAI, (b) ISNI or (c) ORCID) MUST contain an identifier that complies with the syntaxis for the selected identifier scheme URI. Any gml:posList elements nested in gml:Polygon elements: MUST have an even number of values. MUST have at least three different pairs of values, each of which describes one point. MUST start and end with the same pair of values. If a gml:MultiSurface is used, all nested gml:Polygon MUST have the same srsName attribute. Any gml:Point/gml:pos (pos nested in a Point), gml:lowerCorner and gml:upperCorner elements MUST have at least two values. These values MUST be numeric. In case the srsName specifies the RD scheme the values MUST be within the valid range. Any dc:identifier or dcterms:identifier element with attribute xsi:type=\"id-type:ARCHIS-ZAAK-IDENTIFICATIE MUST have a value of 10 or fewer characters. All URLs used in metadata/dataset.xml MUST be valid URLs with protocol http or https . The file metadata/dataset.xml MUST have one or more rights holders, each in a <dcterms:rightsHolder> element as a child of the dcmiMetadata element. dcx-dai:author and dcx-dai:organization elements MUST NOT have the role RightsHolder . 3.2 metadata/files.xml \u00b6 The file metadata/files.xml MUST adhere to DANS bag file metadata schema . Each file element's filepath attribute MUST contain the bag local path to the payload file described. When an original-filepaths.txt exists, rule 3.3.1 applies. Directories and non-payload files MUST NOT be described by a file element. There MUST NOT be more than one file element corresponding to a payload file and every payload file MUST be described by a file element. 3.3 original-filepaths.txt \u00b6 The purpose of original-filepaths.txt is to provide a complete mapping from renamed files back to their original full path (including filename). It MUST be a text file encoded with UTF-8. The lines of original-filepaths.txt MUST be formatted as <physical-bag-relative-path><whitespace><original-bag-relative-path> , where <physical-bag-relative-path> MUST NOT contain whitespace. <physical-bag-relative-path> MUST correspond one-to-one to an existing payload file. <original-bag-relative-path> MUST correspond one-to-one to a filepath attribute in the file elements in the files.xml . 4 Data Station context requirements \u00b6 If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the target Data Station with the following properties: (a) it has a dansSwordToken with the same value as Is-Version-Of (b) it has a dansOtherId with the same value as bag-info.txt 's Has-Organizational-Identifier (or both are absent). The metadata/dataset.xml element dcmiMetadata/dcterms:license with attribute xsi:type=\"dcterms:URI\" (see 3.1.2) must be one of the licenses supported by the target Data Station. The date in metadata/dataset.xml element profile/available MUST NOT be further in the future than the limit set on embargoes in the target Data Station. The bag MUST NOT contain a payload file data/original-metadata.zip . 5 Vault as a Service context requirements \u00b6 If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the Vault that has a dansSwordToken with the same value as Is-Version-Of . (a) The file metadata/dataset.xml MAY contain at most one dcterms:identifier element with an attribute xsi:type=\"id-type:DOI\" . (b) If present, the text of this element MUST be a syntactically valid DOI identifier which SHOULD be resolvable. References \u00b6 BagIt - packaging format on which the DANS Data Station ingest process is based DANS bag file metadata schema - schema for content file specific metadata DANS dataset metadata schema - schema for dataset level metadata DANS controlled list of dcterms:identifier types - list of valid values for xsi:id-type DANS DCTERMS extension: Digital Author Identifier - extensions to accommodate Digital Author Identifiers DANS DCTERMS extension: Geography Markup Language - extensions to accommodate Geography Markup Language DC - Dublin Core metadata elements DCTERMS - metadata schema from which elements are used in several DANS metadata schemas DOI - Digital Object Identifier GML 3.1.1 Simplified Features profile Levels 0 and 1 - Profile of Geography Mark-up Language ISO 8601 - standard for formatting dates and times Media Type - identifiers for file formats OAIS Reference Model - reference model for long term preservation archives RFC 2119 - specification for use of requirement level keywords RD - Stelsel van de Rijksdriehoeksmeting , a scheme for geographical locations urn:uuid - URN scheme for UUID s urn:NBN - URN scheme for National Bibliographic Numbers UUID - universally unique identifiers XML Schema - constraint language for specifying types of XML documents","title":"v1.1.0"},{"location":"versions/archived/1.1.0/#dans-bagit-profile-v110","text":"","title":"DANS BagIt Profile v1.1.0"},{"location":"versions/archived/1.1.0/#introduction","text":"","title":"Introduction"},{"location":"versions/archived/1.1.0/#version","text":"Document version: 1.1.0 Publication date: 2024-04-08","title":"Version"},{"location":"versions/archived/1.1.0/#status","text":"ARCHIVED THIS VERSION OF THE PROFILE IS NO LONGER IN USE.","title":"Status"},{"location":"versions/archived/1.1.0/#changes","text":"","title":"Changes"},{"location":"versions/archived/1.1.0/#changed-from-version-100-to-110","text":"Rule 1.2.2 changed to no longer require the Created element in bag-info.txt , but still allow it for backwards compatibility.","title":"Changed from version 1.0.0 to 1.1.0"},{"location":"versions/archived/1.1.0/#scope","text":"This document specifies what constitutes an acceptable DANS bag. This includes all the requirements for a bag to be successfully processed by the ingest workflow. Version 1.0.0 covers the requirements used by the DANS Data Stations and the Vault as a Service. (DANS internal note: DANS BagIt Profile is also being used in the migration from EASY to the Data Stations. Some rules are modified for migration deposits. See Migration Supplement .)","title":"Scope"},{"location":"versions/archived/1.1.0/#overview-and-conventions","text":"","title":"Overview and conventions"},{"location":"versions/archived/1.1.0/#keywords","text":"The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \" OPTIONAL\" in this document are to be interpreted as described in RFC 2119 . The keyword \"SHOULD\" is also used to specify requirements that are impossible or impractical to check by the archival organization (i.e. DANS). The client should do its best to meet these requirements, but not rely on their being validated by the archival organization.","title":"Keywords"},{"location":"versions/archived/1.1.0/#subdivisions","text":"The requirements are subdivided into the following sections: BagIt-related requirements - requirements that refer back to the BagIt specifications Structural requirements - requirements regarding the directories and files in the bag Metadata requirements - requirements regarding the metadata files included in the bag Data Station context requirements - requirements regarding the Data Station where the dataset is to be created or modified; these do not apply to the Vault as a Service Vault as a Service context requirements - requirements that are only applicable to the Vault as a Service and not to the Data Stations The sections are numbered and may have numbered subsections. The requirements themselves are stated as numbered rules. Rules may have parts that are labeled with letters: (a), (b), (c), etc. To uniquely identify a specific rule, use the notation <section-nr>[.<subsection-nr>].<rule-nr> [(<letter>)] Example: 2.3.4 (e) means part e of the fourth rule in subsection 3 of section 2.","title":"Subdivisions"},{"location":"versions/archived/1.1.0/#xml-namespaces","text":"When referring to XML element or attribute names or attribute values that have a prefix (such as dcterms:identifier ) an element in a certain namespace is intended. The table below lists the mapping from prefix to namespace. In the actual document, the namespace may be bound to a different prefix, or be the default namespace. Prefix Namespace URI Namespace documentation dc http://purl.org/dc/elements/1.1/ DC dcterms http://purl.org/dc/terms/ DCTERMS dcx-dai http://easy.dans.knaw.nl/schemas/dcx/dai/ DANS DCTERMS extension: Digital Author Identifier dcx-gml http://easy.dans.knaw.nl/schemas/dcx/gml/ DANS DCTERMS extension: Geography Markup Language ddm http://schemas.dans.knaw.nl/dataset/ddm-v2/ DANS dataset metadata schema files http://easy.dans.knaw.nl/schemas/bag/metadata/files/ DANS bag file metadata schema gml http://www.opengis.net/gml GML 3.1.1 Simplified Features profile Levels 0 and 1 id-type http://easy.dans.knaw.nl/schemas/vocab/identifier-type/ DANS controlled list of dcterms:identifier types xsi http://www.w3.org/2001/XMLSchema-instance XML Schema","title":"XML namespaces"},{"location":"versions/archived/1.1.0/#names","text":"Exact names are specified in code style. The capitalization of those names must be exactly as specified, unless it is explicitly stated that the name is case-insensitive. If the name is a file path it is relative to the bag base directory.","title":"Names"},{"location":"versions/archived/1.1.0/#glossary","text":"This section defines a number of terms that may be useful when discussing this specification. Several of these terms are used in the Requirements section of this document. Where terms are used in the definitions of other terms, they are printed in italics . bag : a data package conforming to the BagIt specifications. bag-ID : a urn:uuid given to every deposit upon delivery to DANS. The bag-ID of the first version of a dataset is also known as the sword token . (version N) DANS-bag : a bag that also conforms to (version N) of the DANS BagIt Profile specifications. DANS Data Station : the publishing and archiving service of DANS for datasets Vault as a Service : the service that allows customers to store datasets in the DANS Data Vault, without publishing them in a Data Station DANS SWORD Service : the DANS implementation of the SWORDv2 protocol dataset : an information package containing data and metadata published in a DANS Data Station . A dataset may have multiple versions. deposit : a package containing data and metadata sent to DANS by the depositor to create a new dataset or dataset version. depositor : the agent sending data to DANS for publishing in a DANS Data Station . This term corresponds to the Producer in the OAIS Reference Model . deaccessioned version : a dataset that is present in a DANS Data Station , but no longer disseminated. To the external user the dataset version appears to be deleted, only a tombstone remains. update-deposit : a deposit that is intended to create a new version of an existing dataset . version-bag-ID : a bag-ID that references a version of a dataset . If the dataset consists of several versions , the DOI resolves to the most recent of those version s. All versions of one dataset have the same sword token . sword token : a urn:uuid assigned to first version bags upon submission through the DANS SWORD Service . This UUID is used when depositing an update-deposit and to identify all versions of one dataset.","title":"Glossary"},{"location":"versions/archived/1.1.0/#requirements","text":"","title":"Requirements"},{"location":"versions/archived/1.1.0/#1-bagit-related","text":"","title":"1 BagIt related"},{"location":"versions/archived/1.1.0/#11-validity","text":"The bag MUST be valid according to the BagIt specifications v1.0 (RFC 8493).","title":"1.1 Validity"},{"location":"versions/archived/1.1.0/#12-bag-infotxt","text":"The bag MUST contain a bag-info.txt file. The bag-info.txt file MAY contain one or more elements called Created . This element, when present, is ignored. The only reason to allow it is for backwards compatibility with v1.0.0 of the DANS BagIt Profile. (a) The bag-info.txt file MAY contain at most one element called Is-Version-Of (b) with a urn:uuid -value. See rules 4.1 and 5.1 for the context requirements if Is-Version-Of is provided. (a) The bag-info.txt file MAY contain at most one element called Has-Organizational-Identifier . (b) If this Has-Organizational-Identifier is given, at most one Has-Organizational-Identifier-Version MAY be present, containing a version number. (c) If Has-Organizational-Identifier is present then its value MUST start with one of the approved prefixes. Each client will be assigned a unique prefix to use for this purpose.","title":"1.2 bag-info.txt"},{"location":"versions/archived/1.1.0/#13-manifests","text":"If the bag has only one payload manifest it MUST NOT use the MD5 algorithm. However, it MAY have an MD5 payload manifest in addition to other payload manifests.","title":"1.3 Manifests"},{"location":"versions/archived/1.1.0/#2-structural-requirements","text":"The bag MUST have a tag-directory called metadata directly under the bag base directory. The metadata directory MUST contain the files: (a) metadata/dataset.xml and (b) metadata/files.xml . The metadata directory MUST NOT contain any other files or directories. A DANS bag MAY contain a file original-filepaths.txt in the root of the bag in UTF-8 encoding. For the content requirements and purpose of this file, if it exists, see Section 3.3.","title":"2 Structural requirements"},{"location":"versions/archived/1.1.0/#3-metadata-requirements","text":"","title":"3 Metadata requirements"},{"location":"versions/archived/1.1.0/#31-metadatadatasetxml","text":"The file metadata/dataset.xml MUST adhere to DANS dataset metadata schema . The file metadata/dataset.xml MUST have at least one dcterms:license element as a child of the dcmiMetadata element. Exactly one of these elements MUST have the attribute xsi:type=\"dcterms:URI\" and have a URI as element text. (See also rule 4.2.) Any dcx-dai:<scheme> elements (i.e. (a) DAI, (b) ISNI or (c) ORCID) MUST contain an identifier that complies with the syntaxis for the selected identifier scheme URI. Any gml:posList elements nested in gml:Polygon elements: MUST have an even number of values. MUST have at least three different pairs of values, each of which describes one point. MUST start and end with the same pair of values. If a gml:MultiSurface is used, all nested gml:Polygon MUST have the same srsName attribute. Any gml:Point/gml:pos (pos nested in a Point), gml:lowerCorner and gml:upperCorner elements MUST have at least two values. These values MUST be numeric. In case the srsName specifies the RD scheme the values MUST be within the valid range. Any dc:identifier or dcterms:identifier element with attribute xsi:type=\"id-type:ARCHIS-ZAAK-IDENTIFICATIE MUST have a value of 10 or fewer characters. All URLs used in metadata/dataset.xml MUST be valid URLs with protocol http or https . The file metadata/dataset.xml MUST have one or more rights holders, each in a <dcterms:rightsHolder> element as a child of the dcmiMetadata element. dcx-dai:author and dcx-dai:organization elements MUST NOT have the role RightsHolder .","title":"3.1 metadata/dataset.xml"},{"location":"versions/archived/1.1.0/#32-metadatafilesxml","text":"The file metadata/files.xml MUST adhere to DANS bag file metadata schema . Each file element's filepath attribute MUST contain the bag local path to the payload file described. When an original-filepaths.txt exists, rule 3.3.1 applies. Directories and non-payload files MUST NOT be described by a file element. There MUST NOT be more than one file element corresponding to a payload file and every payload file MUST be described by a file element.","title":"3.2 metadata/files.xml"},{"location":"versions/archived/1.1.0/#33-original-filepathstxt","text":"The purpose of original-filepaths.txt is to provide a complete mapping from renamed files back to their original full path (including filename). It MUST be a text file encoded with UTF-8. The lines of original-filepaths.txt MUST be formatted as <physical-bag-relative-path><whitespace><original-bag-relative-path> , where <physical-bag-relative-path> MUST NOT contain whitespace. <physical-bag-relative-path> MUST correspond one-to-one to an existing payload file. <original-bag-relative-path> MUST correspond one-to-one to a filepath attribute in the file elements in the files.xml .","title":"3.3 original-filepaths.txt"},{"location":"versions/archived/1.1.0/#4-data-station-context-requirements","text":"If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the target Data Station with the following properties: (a) it has a dansSwordToken with the same value as Is-Version-Of (b) it has a dansOtherId with the same value as bag-info.txt 's Has-Organizational-Identifier (or both are absent). The metadata/dataset.xml element dcmiMetadata/dcterms:license with attribute xsi:type=\"dcterms:URI\" (see 3.1.2) must be one of the licenses supported by the target Data Station. The date in metadata/dataset.xml element profile/available MUST NOT be further in the future than the limit set on embargoes in the target Data Station. The bag MUST NOT contain a payload file data/original-metadata.zip .","title":"4 Data Station context requirements"},{"location":"versions/archived/1.1.0/#5-vault-as-a-service-context-requirements","text":"If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the Vault that has a dansSwordToken with the same value as Is-Version-Of . (a) The file metadata/dataset.xml MAY contain at most one dcterms:identifier element with an attribute xsi:type=\"id-type:DOI\" . (b) If present, the text of this element MUST be a syntactically valid DOI identifier which SHOULD be resolvable.","title":"5 Vault as a Service context requirements"},{"location":"versions/archived/1.1.0/#references","text":"BagIt - packaging format on which the DANS Data Station ingest process is based DANS bag file metadata schema - schema for content file specific metadata DANS dataset metadata schema - schema for dataset level metadata DANS controlled list of dcterms:identifier types - list of valid values for xsi:id-type DANS DCTERMS extension: Digital Author Identifier - extensions to accommodate Digital Author Identifiers DANS DCTERMS extension: Geography Markup Language - extensions to accommodate Geography Markup Language DC - Dublin Core metadata elements DCTERMS - metadata schema from which elements are used in several DANS metadata schemas DOI - Digital Object Identifier GML 3.1.1 Simplified Features profile Levels 0 and 1 - Profile of Geography Mark-up Language ISO 8601 - standard for formatting dates and times Media Type - identifiers for file formats OAIS Reference Model - reference model for long term preservation archives RFC 2119 - specification for use of requirement level keywords RD - Stelsel van de Rijksdriehoeksmeting , a scheme for geographical locations urn:uuid - URN scheme for UUID s urn:NBN - URN scheme for National Bibliographic Numbers UUID - universally unique identifiers XML Schema - constraint language for specifying types of XML documents","title":"References"},{"location":"versions/archived/1.2.0/","text":"DANS BagIt Profile v1.2.0 \u00b6 Introduction \u00b6 Version \u00b6 Document version: 1.2.0 Publication date: 2024-08-28 Status \u00b6 PUBLISHED Changes \u00b6 Changed from version 1.1.0 to 1.2.0 \u00b6 Added rules 11 and 12 to section 3.1. Rule 11 introduces the use of the valueCode attribute as an alternative for valueURI for the ABR controlled vocabularies. While using valueURI is preferred, valueCode is also allowed to facilitate client that cannot easily convert the short codes to term URIs. Because this is an added (and backwards compatible) feature, this release is a minor one. Rules 12 adds explicitly the requirement that term URIs (or corresponding short codes) used as valueURI values must be valid terms in the controlled vocabulary. While technically this adds a backwards incompatible requirement, it is considered to be a clarification of implied requirements and therefore as a patch. Scope \u00b6 This document specifies what constitutes an acceptable DANS bag. This includes all the requirements for a bag to be successfully processed by the ingest workflow. Versions 1.x.x cover the requirements used by the DANS Data Stations and the Vault as a Service. (DANS internal note: DANS BagIt Profile is also being used in the migration from EASY to the Data Stations. Some rules are modified for migration deposits. See Migration Supplement .) Overview and conventions \u00b6 Keywords \u00b6 The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \" OPTIONAL\" in this document are to be interpreted as described in RFC 2119 . The keyword \"SHOULD\" is also used to specify requirements that are impossible or impractical to check by the archival organization (i.e. DANS). The client should do its best to meet these requirements, but not rely on their being validated by the archival organization. Subdivisions \u00b6 The requirements are subdivided into the following sections: BagIt-related requirements - requirements that refer back to the BagIt specifications Structural requirements - requirements regarding the directories and files in the bag Metadata requirements - requirements regarding the metadata files included in the bag Data Station context requirements - requirements regarding the Data Station where the dataset is to be created or modified; these do not apply to the Vault as a Service Vault as a Service context requirements - requirements that are only applicable to the Vault as a Service and not to the Data Stations The sections are numbered and may have numbered subsections. The requirements themselves are stated as numbered rules. Rules may have parts that are labeled with letters: (a), (b), (c), etc. To uniquely identify a specific rule, use the notation <section-nr>[.<subsection-nr>].<rule-nr> [(<letter>)] Example: 2.3.4 (e) means part e of the fourth rule in subsection 3 of section 2. XML namespaces \u00b6 When referring to XML element or attribute names or attribute values that have a prefix (such as dcterms:identifier ) an element in a certain namespace is intended. The table below lists the mapping from prefix to namespace. In the actual document, the namespace may be bound to a different prefix, or be the default namespace. Prefix Namespace URI Namespace documentation dc http://purl.org/dc/elements/1.1/ DC dcterms http://purl.org/dc/terms/ DCTERMS dcx-dai http://easy.dans.knaw.nl/schemas/dcx/dai/ DANS DCTERMS extension: Digital Author Identifier dcx-gml http://easy.dans.knaw.nl/schemas/dcx/gml/ DANS DCTERMS extension: Geography Markup Language ddm http://schemas.dans.knaw.nl/dataset/ddm-v2/ DANS dataset metadata schema files http://easy.dans.knaw.nl/schemas/bag/metadata/files/ DANS bag file metadata schema gml http://www.opengis.net/gml GML 3.1.1 Simplified Features profile Levels 0 and 1 id-type http://easy.dans.knaw.nl/schemas/vocab/identifier-type/ DANS controlled list of dcterms:identifier types xsi http://www.w3.org/2001/XMLSchema-instance XML Schema Names \u00b6 Exact names are specified in code style. The capitalization of those names must be exactly as specified, unless it is explicitly stated that the name is case-insensitive. If the name is a file path it is relative to the bag base directory. Glossary \u00b6 This section defines a number of terms that may be useful when discussing this specification. Several of these terms are used in the Requirements section of this document. Where terms are used in the definitions of other terms, they are printed in italics . bag : a data package conforming to the BagIt specifications. bag-ID : a urn:uuid given to every deposit upon delivery to DANS. The bag-ID of the first version of a dataset is also known as the sword token . (version N) DANS-bag : a bag that also conforms to (version N) of the DANS BagIt Profile specifications. DANS Data Station : the publishing and archiving service of DANS for datasets Vault as a Service : the service that allows customers to store datasets in the DANS Data Vault, without publishing them in a Data Station DANS SWORD Service : the DANS implementation of the SWORDv2 protocol dataset : an information package containing data and metadata published in a DANS Data Station . A dataset may have multiple versions. deposit : a package containing data and metadata sent to DANS by the depositor to create a new dataset or dataset version. depositor : the agent sending data to DANS for publishing in a DANS Data Station . This term corresponds to the Producer in the OAIS Reference Model . deaccessioned version : a dataset that is present in a DANS Data Station , but no longer disseminated. To the external user the dataset version appears to be deleted, only a tombstone remains. update-deposit : a deposit that is intended to create a new version of an existing dataset . version-bag-ID : a bag-ID that references a version of a dataset . If the dataset consists of several versions , the DOI resolves to the most recent of those version s. All versions of one dataset have the same sword token . sword token : a urn:uuid assigned to first version bags upon submission through the DANS SWORD Service . This UUID is used when depositing an update-deposit and to identify all versions of one dataset. Requirements \u00b6 1 BagIt related \u00b6 1.1 Validity \u00b6 The bag MUST be valid according to the BagIt specifications v1.0 (RFC 8493). 1.2 bag-info.txt \u00b6 The bag MUST contain a bag-info.txt file. The bag-info.txt file MAY contain one or more elements called Created . This element, when present, is ignored. The only reason to allow it is for backwards compatibility with v1.0.0 of the DANS BagIt Profile. (a) The bag-info.txt file MAY contain at most one element called Is-Version-Of (b) with a urn:uuid -value. See rules 4.1 and 5.1 for the context requirements if Is-Version-Of is provided. (a) The bag-info.txt file MAY contain at most one element called Has-Organizational-Identifier . (b) If this Has-Organizational-Identifier is given, at most one Has-Organizational-Identifier-Version MAY be present, containing a version number. (c) If Has-Organizational-Identifier is present then its value MUST start with one of the approved prefixes. Each client will be assigned a unique prefix to use for this purpose. 1.3 Manifests \u00b6 If the bag has only one payload manifest it MUST NOT use the MD5 algorithm. However, it MAY have an MD5 payload manifest in addition to other payload manifests. 2 Structural requirements \u00b6 The bag MUST have a tag-directory called metadata directly under the bag base directory. The metadata directory MUST contain the files: (a) metadata/dataset.xml and (b) metadata/files.xml . The metadata directory MUST NOT contain any other files or directories. A DANS bag MAY contain a file original-filepaths.txt in the root of the bag in UTF-8 encoding. For the content requirements and purpose of this file, if it exists, see Section 3.3. 3 Metadata requirements \u00b6 3.1 metadata/dataset.xml \u00b6 The file metadata/dataset.xml MUST adhere to DANS dataset metadata schema . The file metadata/dataset.xml MUST have at least one dcterms:license element as a child of the dcmiMetadata element. Exactly one of these elements MUST have the attribute xsi:type=\"dcterms:URI\" and have a URI as element text. (See also rule 4.2.) Any dcx-dai:<scheme> elements (i.e. (a) DAI, (b) ISNI or (c) ORCID) MUST contain an identifier that complies with the syntaxis for the selected identifier scheme URI. Any gml:posList elements nested in gml:Polygon elements: MUST have an even number of values. MUST have at least three different pairs of values, each of which describes one point. MUST start and end with the same pair of values. If a gml:MultiSurface is used, all nested gml:Polygon MUST have the same srsName attribute. Any gml:Point/gml:pos (pos nested in a Point), gml:lowerCorner and gml:upperCorner elements MUST have at least two values. These values MUST be numeric. In case the srsName specifies the RD scheme the values MUST be within the valid range. Any dc:identifier or dcterms:identifier element with attribute xsi:type=\"id-type:ARCHIS-ZAAK-IDENTIFICATIE MUST have a value of 10 or fewer characters. All URLs used in metadata/dataset.xml MUST be valid URLs with protocol http or https . The file metadata/dataset.xml MUST have one or more rights holders, each in a <dcterms:rightsHolder> element as a child of the dcmiMetadata element. dcx-dai:author and dcx-dai:organization elements MUST NOT have the role RightsHolder . The following elements, if present, MUST have exactly one of the attributes valueURI or valueCode (and MUST NOT have both). ddm:reportNumber ddm:acquisitionMethod ddm:subject ddm:temporal (a) For the schemeURI listed below, the value of a valueURI attribute MUST be a term URI that is part of the controlled vocabulary specified in the schemeURI attribute of the same element. This is validated against the version currently hosted by the DANS controlled vocabulary service . (b) If a valueCode attribute is used, it MUST correspond to a valid term in the controlled vocabulary. This rule applies to the following schemeURIs: https://data.cultureelerfgoed.nl/term/id/rn/a4a7933c-e096-4bcf-a921-4f70a78749fe (ABR) https://data.cultureelerfgoed.nl/term/id/abr/b6df7840-67bf-48bd-aa56-7ee39435d2ed (ABR) https://data.cultureelerfgoed.nl/term/id/abr/e9546020-4b28-4819-b0c2-29e7c864c5c0 (ABR Complextypen) https://data.cultureelerfgoed.nl/term/id/abr/22cbb070-6542-48f0-8afe-7d98d398cc0b (ABR Artefacten) https://data.cultureelerfgoed.nl/term/id/abr/9b688754-1315-484b-9c89-8817e87c1e84 (ABR Periodes) https://data.cultureelerfgoed.nl/term/id/abr/7a99aaba-c1e7-49a4-9dd8-d295dbcc870e (ABR Rapporttypes) https://data.cultureelerfgoed.nl/term/id/abr/554ca1ec-3ed8-42d3-ae4b-47bcb848b238 (ABR Verwervingswijzen) https://vocabularies.dans.knaw.nl/collections/ (DANS Collections) 3.2 metadata/files.xml \u00b6 The file metadata/files.xml MUST adhere to DANS bag file metadata schema . Each file element's filepath attribute MUST contain the bag local path to the payload file described. When an original-filepaths.txt exists, rule 3.3.1 applies. Directories and non-payload files MUST NOT be described by a file element. There MUST NOT be more than one file element corresponding to a payload file and every payload file MUST be described by a file element. 3.3 original-filepaths.txt \u00b6 The purpose of original-filepaths.txt is to provide a complete mapping from renamed files back to their original full path (including filename). It MUST be a text file encoded with UTF-8. The lines of original-filepaths.txt MUST be formatted as <physical-bag-relative-path><whitespace><original-bag-relative-path> , where <physical-bag-relative-path> MUST NOT contain whitespace. <physical-bag-relative-path> MUST correspond one-to-one to an existing payload file. <original-bag-relative-path> MUST correspond one-to-one to a filepath attribute in the file elements in the files.xml . 4 Data Station context requirements \u00b6 If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the target Data Station with the following properties: (a) it has a dansSwordToken with the same value as Is-Version-Of (b) it has a dansOtherId with the same value as bag-info.txt 's Has-Organizational-Identifier (or both are absent). The metadata/dataset.xml element dcmiMetadata/dcterms:license with attribute xsi:type=\"dcterms:URI\" (see 3.1.2) must be one of the licenses supported by the target Data Station. The date in metadata/dataset.xml element profile/available MUST NOT be further in the future than the limit set on embargoes in the target Data Station. The bag MUST NOT contain a payload file data/original-metadata.zip . 5 Vault as a Service context requirements \u00b6 If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the Vault that has a dansSwordToken with the same value as Is-Version-Of . (a) The file metadata/dataset.xml MAY contain at most one dcterms:identifier element with an attribute xsi:type=\"id-type:DOI\" . (b) If present, the text of this element MUST be a syntactically valid DOI identifier which SHOULD be resolvable. References \u00b6 BagIt - packaging format on which the DANS Data Station ingest process is based DANS bag file metadata schema - schema for content file specific metadata DANS dataset metadata schema - schema for dataset level metadata DANS controlled list of dcterms:identifier types - list of valid values for xsi:id-type DANS DCTERMS extension: Digital Author Identifier - extensions to accommodate Digital Author Identifiers DANS DCTERMS extension: Geography Markup Language - extensions to accommodate Geography Markup Language DC - Dublin Core metadata elements DCTERMS - metadata schema from which elements are used in several DANS metadata schemas DOI - Digital Object Identifier GML 3.1.1 Simplified Features profile Levels 0 and 1 - Profile of Geography Mark-up Language ISO 8601 - standard for formatting dates and times Media Type - identifiers for file formats OAIS Reference Model - reference model for long term preservation archives RFC 2119 - specification for use of requirement level keywords RD - Stelsel van de Rijksdriehoeksmeting , a scheme for geographical locations urn:uuid - URN scheme for UUID s urn:NBN - URN scheme for National Bibliographic Numbers UUID - universally unique identifiers XML Schema - constraint language for specifying types of XML documents","title":"v1.2.0"},{"location":"versions/archived/1.2.0/#dans-bagit-profile-v120","text":"","title":"DANS BagIt Profile v1.2.0"},{"location":"versions/archived/1.2.0/#introduction","text":"","title":"Introduction"},{"location":"versions/archived/1.2.0/#version","text":"Document version: 1.2.0 Publication date: 2024-08-28","title":"Version"},{"location":"versions/archived/1.2.0/#status","text":"PUBLISHED","title":"Status"},{"location":"versions/archived/1.2.0/#changes","text":"","title":"Changes"},{"location":"versions/archived/1.2.0/#changed-from-version-110-to-120","text":"Added rules 11 and 12 to section 3.1. Rule 11 introduces the use of the valueCode attribute as an alternative for valueURI for the ABR controlled vocabularies. While using valueURI is preferred, valueCode is also allowed to facilitate client that cannot easily convert the short codes to term URIs. Because this is an added (and backwards compatible) feature, this release is a minor one. Rules 12 adds explicitly the requirement that term URIs (or corresponding short codes) used as valueURI values must be valid terms in the controlled vocabulary. While technically this adds a backwards incompatible requirement, it is considered to be a clarification of implied requirements and therefore as a patch.","title":"Changed from version 1.1.0 to 1.2.0"},{"location":"versions/archived/1.2.0/#scope","text":"This document specifies what constitutes an acceptable DANS bag. This includes all the requirements for a bag to be successfully processed by the ingest workflow. Versions 1.x.x cover the requirements used by the DANS Data Stations and the Vault as a Service. (DANS internal note: DANS BagIt Profile is also being used in the migration from EASY to the Data Stations. Some rules are modified for migration deposits. See Migration Supplement .)","title":"Scope"},{"location":"versions/archived/1.2.0/#overview-and-conventions","text":"","title":"Overview and conventions"},{"location":"versions/archived/1.2.0/#keywords","text":"The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \" OPTIONAL\" in this document are to be interpreted as described in RFC 2119 . The keyword \"SHOULD\" is also used to specify requirements that are impossible or impractical to check by the archival organization (i.e. DANS). The client should do its best to meet these requirements, but not rely on their being validated by the archival organization.","title":"Keywords"},{"location":"versions/archived/1.2.0/#subdivisions","text":"The requirements are subdivided into the following sections: BagIt-related requirements - requirements that refer back to the BagIt specifications Structural requirements - requirements regarding the directories and files in the bag Metadata requirements - requirements regarding the metadata files included in the bag Data Station context requirements - requirements regarding the Data Station where the dataset is to be created or modified; these do not apply to the Vault as a Service Vault as a Service context requirements - requirements that are only applicable to the Vault as a Service and not to the Data Stations The sections are numbered and may have numbered subsections. The requirements themselves are stated as numbered rules. Rules may have parts that are labeled with letters: (a), (b), (c), etc. To uniquely identify a specific rule, use the notation <section-nr>[.<subsection-nr>].<rule-nr> [(<letter>)] Example: 2.3.4 (e) means part e of the fourth rule in subsection 3 of section 2.","title":"Subdivisions"},{"location":"versions/archived/1.2.0/#xml-namespaces","text":"When referring to XML element or attribute names or attribute values that have a prefix (such as dcterms:identifier ) an element in a certain namespace is intended. The table below lists the mapping from prefix to namespace. In the actual document, the namespace may be bound to a different prefix, or be the default namespace. Prefix Namespace URI Namespace documentation dc http://purl.org/dc/elements/1.1/ DC dcterms http://purl.org/dc/terms/ DCTERMS dcx-dai http://easy.dans.knaw.nl/schemas/dcx/dai/ DANS DCTERMS extension: Digital Author Identifier dcx-gml http://easy.dans.knaw.nl/schemas/dcx/gml/ DANS DCTERMS extension: Geography Markup Language ddm http://schemas.dans.knaw.nl/dataset/ddm-v2/ DANS dataset metadata schema files http://easy.dans.knaw.nl/schemas/bag/metadata/files/ DANS bag file metadata schema gml http://www.opengis.net/gml GML 3.1.1 Simplified Features profile Levels 0 and 1 id-type http://easy.dans.knaw.nl/schemas/vocab/identifier-type/ DANS controlled list of dcterms:identifier types xsi http://www.w3.org/2001/XMLSchema-instance XML Schema","title":"XML namespaces"},{"location":"versions/archived/1.2.0/#names","text":"Exact names are specified in code style. The capitalization of those names must be exactly as specified, unless it is explicitly stated that the name is case-insensitive. If the name is a file path it is relative to the bag base directory.","title":"Names"},{"location":"versions/archived/1.2.0/#glossary","text":"This section defines a number of terms that may be useful when discussing this specification. Several of these terms are used in the Requirements section of this document. Where terms are used in the definitions of other terms, they are printed in italics . bag : a data package conforming to the BagIt specifications. bag-ID : a urn:uuid given to every deposit upon delivery to DANS. The bag-ID of the first version of a dataset is also known as the sword token . (version N) DANS-bag : a bag that also conforms to (version N) of the DANS BagIt Profile specifications. DANS Data Station : the publishing and archiving service of DANS for datasets Vault as a Service : the service that allows customers to store datasets in the DANS Data Vault, without publishing them in a Data Station DANS SWORD Service : the DANS implementation of the SWORDv2 protocol dataset : an information package containing data and metadata published in a DANS Data Station . A dataset may have multiple versions. deposit : a package containing data and metadata sent to DANS by the depositor to create a new dataset or dataset version. depositor : the agent sending data to DANS for publishing in a DANS Data Station . This term corresponds to the Producer in the OAIS Reference Model . deaccessioned version : a dataset that is present in a DANS Data Station , but no longer disseminated. To the external user the dataset version appears to be deleted, only a tombstone remains. update-deposit : a deposit that is intended to create a new version of an existing dataset . version-bag-ID : a bag-ID that references a version of a dataset . If the dataset consists of several versions , the DOI resolves to the most recent of those version s. All versions of one dataset have the same sword token . sword token : a urn:uuid assigned to first version bags upon submission through the DANS SWORD Service . This UUID is used when depositing an update-deposit and to identify all versions of one dataset.","title":"Glossary"},{"location":"versions/archived/1.2.0/#requirements","text":"","title":"Requirements"},{"location":"versions/archived/1.2.0/#1-bagit-related","text":"","title":"1 BagIt related"},{"location":"versions/archived/1.2.0/#11-validity","text":"The bag MUST be valid according to the BagIt specifications v1.0 (RFC 8493).","title":"1.1 Validity"},{"location":"versions/archived/1.2.0/#12-bag-infotxt","text":"The bag MUST contain a bag-info.txt file. The bag-info.txt file MAY contain one or more elements called Created . This element, when present, is ignored. The only reason to allow it is for backwards compatibility with v1.0.0 of the DANS BagIt Profile. (a) The bag-info.txt file MAY contain at most one element called Is-Version-Of (b) with a urn:uuid -value. See rules 4.1 and 5.1 for the context requirements if Is-Version-Of is provided. (a) The bag-info.txt file MAY contain at most one element called Has-Organizational-Identifier . (b) If this Has-Organizational-Identifier is given, at most one Has-Organizational-Identifier-Version MAY be present, containing a version number. (c) If Has-Organizational-Identifier is present then its value MUST start with one of the approved prefixes. Each client will be assigned a unique prefix to use for this purpose.","title":"1.2 bag-info.txt"},{"location":"versions/archived/1.2.0/#13-manifests","text":"If the bag has only one payload manifest it MUST NOT use the MD5 algorithm. However, it MAY have an MD5 payload manifest in addition to other payload manifests.","title":"1.3 Manifests"},{"location":"versions/archived/1.2.0/#2-structural-requirements","text":"The bag MUST have a tag-directory called metadata directly under the bag base directory. The metadata directory MUST contain the files: (a) metadata/dataset.xml and (b) metadata/files.xml . The metadata directory MUST NOT contain any other files or directories. A DANS bag MAY contain a file original-filepaths.txt in the root of the bag in UTF-8 encoding. For the content requirements and purpose of this file, if it exists, see Section 3.3.","title":"2 Structural requirements"},{"location":"versions/archived/1.2.0/#3-metadata-requirements","text":"","title":"3 Metadata requirements"},{"location":"versions/archived/1.2.0/#31-metadatadatasetxml","text":"The file metadata/dataset.xml MUST adhere to DANS dataset metadata schema . The file metadata/dataset.xml MUST have at least one dcterms:license element as a child of the dcmiMetadata element. Exactly one of these elements MUST have the attribute xsi:type=\"dcterms:URI\" and have a URI as element text. (See also rule 4.2.) Any dcx-dai:<scheme> elements (i.e. (a) DAI, (b) ISNI or (c) ORCID) MUST contain an identifier that complies with the syntaxis for the selected identifier scheme URI. Any gml:posList elements nested in gml:Polygon elements: MUST have an even number of values. MUST have at least three different pairs of values, each of which describes one point. MUST start and end with the same pair of values. If a gml:MultiSurface is used, all nested gml:Polygon MUST have the same srsName attribute. Any gml:Point/gml:pos (pos nested in a Point), gml:lowerCorner and gml:upperCorner elements MUST have at least two values. These values MUST be numeric. In case the srsName specifies the RD scheme the values MUST be within the valid range. Any dc:identifier or dcterms:identifier element with attribute xsi:type=\"id-type:ARCHIS-ZAAK-IDENTIFICATIE MUST have a value of 10 or fewer characters. All URLs used in metadata/dataset.xml MUST be valid URLs with protocol http or https . The file metadata/dataset.xml MUST have one or more rights holders, each in a <dcterms:rightsHolder> element as a child of the dcmiMetadata element. dcx-dai:author and dcx-dai:organization elements MUST NOT have the role RightsHolder . The following elements, if present, MUST have exactly one of the attributes valueURI or valueCode (and MUST NOT have both). ddm:reportNumber ddm:acquisitionMethod ddm:subject ddm:temporal (a) For the schemeURI listed below, the value of a valueURI attribute MUST be a term URI that is part of the controlled vocabulary specified in the schemeURI attribute of the same element. This is validated against the version currently hosted by the DANS controlled vocabulary service . (b) If a valueCode attribute is used, it MUST correspond to a valid term in the controlled vocabulary. This rule applies to the following schemeURIs: https://data.cultureelerfgoed.nl/term/id/rn/a4a7933c-e096-4bcf-a921-4f70a78749fe (ABR) https://data.cultureelerfgoed.nl/term/id/abr/b6df7840-67bf-48bd-aa56-7ee39435d2ed (ABR) https://data.cultureelerfgoed.nl/term/id/abr/e9546020-4b28-4819-b0c2-29e7c864c5c0 (ABR Complextypen) https://data.cultureelerfgoed.nl/term/id/abr/22cbb070-6542-48f0-8afe-7d98d398cc0b (ABR Artefacten) https://data.cultureelerfgoed.nl/term/id/abr/9b688754-1315-484b-9c89-8817e87c1e84 (ABR Periodes) https://data.cultureelerfgoed.nl/term/id/abr/7a99aaba-c1e7-49a4-9dd8-d295dbcc870e (ABR Rapporttypes) https://data.cultureelerfgoed.nl/term/id/abr/554ca1ec-3ed8-42d3-ae4b-47bcb848b238 (ABR Verwervingswijzen) https://vocabularies.dans.knaw.nl/collections/ (DANS Collections)","title":"3.1 metadata/dataset.xml"},{"location":"versions/archived/1.2.0/#32-metadatafilesxml","text":"The file metadata/files.xml MUST adhere to DANS bag file metadata schema . Each file element's filepath attribute MUST contain the bag local path to the payload file described. When an original-filepaths.txt exists, rule 3.3.1 applies. Directories and non-payload files MUST NOT be described by a file element. There MUST NOT be more than one file element corresponding to a payload file and every payload file MUST be described by a file element.","title":"3.2 metadata/files.xml"},{"location":"versions/archived/1.2.0/#33-original-filepathstxt","text":"The purpose of original-filepaths.txt is to provide a complete mapping from renamed files back to their original full path (including filename). It MUST be a text file encoded with UTF-8. The lines of original-filepaths.txt MUST be formatted as <physical-bag-relative-path><whitespace><original-bag-relative-path> , where <physical-bag-relative-path> MUST NOT contain whitespace. <physical-bag-relative-path> MUST correspond one-to-one to an existing payload file. <original-bag-relative-path> MUST correspond one-to-one to a filepath attribute in the file elements in the files.xml .","title":"3.3 original-filepaths.txt"},{"location":"versions/archived/1.2.0/#4-data-station-context-requirements","text":"If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the target Data Station with the following properties: (a) it has a dansSwordToken with the same value as Is-Version-Of (b) it has a dansOtherId with the same value as bag-info.txt 's Has-Organizational-Identifier (or both are absent). The metadata/dataset.xml element dcmiMetadata/dcterms:license with attribute xsi:type=\"dcterms:URI\" (see 3.1.2) must be one of the licenses supported by the target Data Station. The date in metadata/dataset.xml element profile/available MUST NOT be further in the future than the limit set on embargoes in the target Data Station. The bag MUST NOT contain a payload file data/original-metadata.zip .","title":"4 Data Station context requirements"},{"location":"versions/archived/1.2.0/#5-vault-as-a-service-context-requirements","text":"If bag-info.txt contains the element Is-Version-Of there MUST be a dataset in the Vault that has a dansSwordToken with the same value as Is-Version-Of . (a) The file metadata/dataset.xml MAY contain at most one dcterms:identifier element with an attribute xsi:type=\"id-type:DOI\" . (b) If present, the text of this element MUST be a syntactically valid DOI identifier which SHOULD be resolvable.","title":"5 Vault as a Service context requirements"},{"location":"versions/archived/1.2.0/#references","text":"BagIt - packaging format on which the DANS Data Station ingest process is based DANS bag file metadata schema - schema for content file specific metadata DANS dataset metadata schema - schema for dataset level metadata DANS controlled list of dcterms:identifier types - list of valid values for xsi:id-type DANS DCTERMS extension: Digital Author Identifier - extensions to accommodate Digital Author Identifiers DANS DCTERMS extension: Geography Markup Language - extensions to accommodate Geography Markup Language DC - Dublin Core metadata elements DCTERMS - metadata schema from which elements are used in several DANS metadata schemas DOI - Digital Object Identifier GML 3.1.1 Simplified Features profile Levels 0 and 1 - Profile of Geography Mark-up Language ISO 8601 - standard for formatting dates and times Media Type - identifiers for file formats OAIS Reference Model - reference model for long term preservation archives RFC 2119 - specification for use of requirement level keywords RD - Stelsel van de Rijksdriehoeksmeting , a scheme for geographical locations urn:uuid - URN scheme for UUID s urn:NBN - URN scheme for National Bibliographic Numbers UUID - universally unique identifiers XML Schema - constraint language for specifying types of XML documents","title":"References"}]}